{"version":3,"sources":["Pages/service/useForm.js","Pages/service/CustomTooltip.js","Pages/service/useWindowSize.js","Pages/NavBar.js","Pages/Model/MembersSelectionModal.js","Pages/service/useMembersCheckbox.js","Pages/UploadBill.js"],"names":["useForm","callBack","initialState","validate","useState","formField","setFormField","error","setError","handleOnChange","event","target","name","value","changeFormField","handleSubmit","preventDefault","Object","keys","length","LightTooltip","withStyles","theme","tooltip","backgroundColor","color","boxShadow","shadows","fontSize","Tooltip","RedTooltip","GreenCheckbox","root","green","checked","props","useWindowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","ModalsForm","lazy","AddMemberToGroup","AlertModal","DeletingModal","ProfileManagementModal","NavBar","cookiesData","useContext","loginContext","userContext","userDetailsContext","fetchDisputeContext","disputeContext","memberSettlement","memberSettlementContext","selectedUser","userData","userDetails","fullName","modalsForm","addMemberModal","alertPopUp","deleteModal","deleteType","editProfile","modalShow","setModalShow","callBackFetchingInformation","dispatch","type","payload","stateData","jwt","console","log","fixed","collapseOnSelect","expand","variant","Brand","href","className","src","require","Toggle","aria-controls","Collapse","id","Link","title","groupList","map","groups","index","Item","active","onClick","selectedGroup","sessionStorage","setItem","groupName","createdBy","key","icon","group","plusCircle","trashO","Divider","userPlus","parseInt","getItem","data-toggle","data-placement","isDisputeDisplay","loadDispute","comments","size","disputeData","disputeArray","user","style","alignRight","fallback","show","toBeClosed","userName","hide","mainProps","history","push","message","selectedType","MembersSelectionModal","members","setGroupMembers","formEntryInitial","date","Date","getFullYear","getMonth","slice","getDate","paidBy","fetchData","then","e","groupMemberList","checkedMemberList","setCheckedMemberList","isCheckAll","setIsCheckAll","groupMembers","handleCheckBox","member","isChecked","i","filter","readyGroupMembers","indexOf","substring","checkBoxes","onChange","useMembersCheckbox","Modal","onHide","centered","aria-labelledby","dialogClassName","Header","closeButton","Title","Body","placeholder","Footer","UploadBill","isProcessing","setIsProcessing","ocrText","setOcrText","completedPctg","setCompletedPctg","React","createRef","worker","setWorker","results","setResults","upImg","setUpImg","imgRef","useRef","cropReady","setCropReady","cropComplete","setCropComplete","previewUrl","setPreviewUrl","croppedBlob","setCroppedBlob","userSelectedItems","isMemberSelectionOpened","setMemberSelectionOpened","createWorker","logger","m","updateProgressAndLog","val","RequestHandler","result","res","x","SN","item","price","parseBillText","billText","status","pctg","progress","toFixed","file","a","load","loadLanguage","initialize","recognize","text","data","selectRow","mode","clickToSelect","onSelect","row","isSelect","rowIndex","onSelectAll","rows","unit","y","crop","setCrop","onLoad","useCallback","img","current","makeClientCrop","createCropPreview","image","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","Promise","resolve","reject","toBlob","blob","URL","revokeObjectURL","createObjectURL","Error","marginTop","accept","files","reader","FileReader","readAsDataURL","alt","maxHeight","onImageLoaded","c","onComplete","doOCR","margin","textAlign","keyField","columns","dataField","selectedItems"],"mappings":"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","file":"static/js/9.3931a9bc.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nexport const useForm = (callBack,initialState={},validate)=>{\n    const [formField,setFormField] = useState(initialState);\n    const [error,setError] = useState({});\n\n    const handleOnChange=event=>{\n        setFormField({...formField, [event.target.name]:event.target.value});\n        event.target.name && delete error[event.target.name];\n    };\n\n    const changeFormField = value=>{\n        setFormField(value);\n    };\n    const handleSubmit=event=>{\n        event.preventDefault();\n        if (Object.keys(validate(formField)).length === 0)\n        {\n            callBack(event.target.value);\n            setFormField(initialState);\n            setError({});\n        }\n        else {\n            setError(validate(formField));\n        }\n    };\n\n    return {\n        handleSubmit,\n        handleOnChange,\n        changeFormField,\n        error,\n        formField\n    }\n};\n","\nimport {withStyles} from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport {green} from \"@material-ui/core/colors\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport React from \"react\";\n\n//styling tool tip\nexport const LightTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: '#267c39',\n        color: 'white',\n        boxShadow: theme.shadows[1],\n        fontSize: 12,\n    },\n}))(Tooltip);\n\nexport const RedTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: 'red',\n        color: 'white',\n        boxShadow: theme.shadows[1],\n        fontSize: 12,\n    },\n}))(Tooltip);\n\nexport const GreenCheckbox = withStyles({\n    root: {\n        color: green[400],\n        '&$checked': {\n            color: green[600],\n        },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n","import {useEffect,useState} from 'react';\n\n\nexport const  useWindowSize=()=>{\n\n    const isClient = typeof window === 'object';\n\n    const getSize=()=> {\n\n        return {\n\n            width: isClient ? window.innerWidth : undefined,\n\n            height: isClient ? window.innerHeight : undefined\n\n        };\n\n    };\n\n\n\n    const [windowSize, setWindowSize] = useState(getSize);\n\n\n\n    useEffect(() => {\n\n        if (!isClient) {\n\n            return false;\n\n        }\n\n\n\n        const handleResize=()=> {\n\n            setWindowSize(getSize());\n\n        };\n\n\n\n        window.addEventListener('resize', handleResize);\n\n        return () => window.removeEventListener('resize', handleResize);\n\n    }, []);\n\n\n\n    return windowSize;\n\n}\n","import React, {useContext, useState,lazy,Suspense} from 'react';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport {loginContext, userDetailsContext, disputeContext, memberSettlementContext} from \"./service/Contexts\";\nimport { Icon } from 'react-icons-kit';\nimport {plusCircle,userPlus,trashO,group,comments,user} from 'react-icons-kit/fa/'\nimport {useWindowSize} from \"./service/useWindowSize\";\nimport LoaderScreen from \"./Model/LoaderScreen\";\n\n\n\nconst ModalsForm = lazy(()=>import('./Model/CreateGroupModel'));\nconst AddMemberToGroup = lazy(()=>import('./Model/AddMemberToGroup'));\nconst AlertModal =lazy(()=>import('./Model/AlertModal'));\nconst DeletingModal =lazy(()=>import('./Model/DeletingModal'));\nconst ProfileManagementModal = lazy(()=>import('./Model/ProfileManagementModal'));\nconst NavBar =(props)=>{\n    const cookiesData = useContext(loginContext);\n    const userContext = useContext(userDetailsContext);\n    const fetchDisputeContext = useContext(disputeContext);\n    const memberSettlement = useContext(memberSettlementContext);\n    const selectedUser = typeof userContext.userData.userDetails.fullName !=='undefined'?userContext.userData.userDetails:{fullName:\"np\"};\n    const [modalShow, setModalShow] = useState({modalsForm:false,addMemberModal:false,alertPopUp:false,deleteModal:false,deleteType:null,editProfile:false});\n    const windowSize = useWindowSize();\n\n    const handleSelectedGroup=(selectedGroup)=>{\n        sessionStorage.setItem(\"groupName\",selectedGroup.groupName);\n        sessionStorage.setItem(\"createdBy\",selectedGroup.createdBy);\n          // props.callBackFunction();\n         // props.mainProps.history.push(\"/\")\n        callBackFetchingInformation();\n    };\n\n    const callBackFetchingInformation =()=>{\n\n        memberSettlement.dispatch({type:\"ADD\",payload:cookiesData.stateData.jwt});\n        console.log(\"asd\",memberSettlement)\n    };\n    const handleLogout = ()=>{\n        cookiesData.dispatch({type:'Logout'})\n        props.mainProps.history.push(\"/Login\");\n    };\n\n    return(\n        <div>\n            <ReactBootstrap.Navbar fixed=\"top\"  collapseOnSelect expand=\"lg\" variant=\"light\">\n                <ReactBootstrap.Navbar.Brand href=\"#home\"><img className=\"logo-img\" src={require('../img/logo2.png')} width=\"75px\" height=\"75px\"></img>Split Expenses</ReactBootstrap.Navbar.Brand>\n                <ReactBootstrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <ReactBootstrap.Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <ReactBootstrap.Nav className=\"mr-auto\">\n\n                        {/* -------Left side of navBar---------- */}\n                        <ReactBootstrap.Nav.Link href=\"/home\">Home</ReactBootstrap.Nav.Link>\n\n                        <ReactBootstrap.NavDropdown title=\"Groups\" id=\"collasible-nav-dropdown\" >\n                            {\n                                userContext.userData.groupList.map((groups,index)=>{\n                                    return <ReactBootstrap.NavDropdown.Item  active={false} onClick={()=>{handleSelectedGroup(groups)}} key={index}>\n\n                                        <Icon icon={group} ></Icon> {groups.groupName}</ReactBootstrap.NavDropdown.Item>\n                                })\n                            }\n                        </ReactBootstrap.NavDropdown>\n\n                        <ReactBootstrap.NavDropdown title=\"Manage Group\" id=\"collasible-nav-dropdown\">\n                            <ReactBootstrap.NavDropdown.Item href=\"#\"  onClick={()=>{setModalShow({...modalShow,modalsForm:true})}}> <Icon icon={plusCircle}></Icon> Create Group</ReactBootstrap.NavDropdown.Item>\n                            <ReactBootstrap.NavDropdown.Item href=\"#\" onClick={()=>{setModalShow({...modalShow,deleteModal:true,deleteType:\"group\"})}}> <Icon icon={trashO}></Icon> Delete Group </ReactBootstrap.NavDropdown.Item>\n                            <ReactBootstrap.Dropdown.Divider />\n                            <ReactBootstrap.NavDropdown.Item href=\"#1\"   onClick={()=>{setModalShow({...modalShow,addMemberModal:true})}}> <Icon icon={userPlus}></Icon>  Add Member </ReactBootstrap.NavDropdown.Item>\n                            {parseInt(sessionStorage.getItem(\"createdBy\")) === selectedUser.id && <ReactBootstrap.NavDropdown.Item href=\"#2\" onClick={()=>{setModalShow({...modalShow,deleteModal:true,deleteType:\"Member\"})}} > <Icon icon={trashO}></Icon> Delete Member</ReactBootstrap.NavDropdown.Item>}\n                        </ReactBootstrap.NavDropdown>\n\n                        <ReactBootstrap.Nav.Link  href=\"/upload\" >Upload Bill</ReactBootstrap.Nav.Link>\n                    </ReactBootstrap.Nav>\n\n                    {/* -------Right side of navBar---------- */}\n                        <div className=\"dispute\" data-toggle=\"tooltip\" data-placement=\"bottom\"  title=\"Disputes\">\n                        <a href=\"#\" className={!props.isDisputeDisplay ? 'isDisabled':\"\"}  onClick={props.loadDispute} >\n                          { windowSize.width >768?<Icon icon={comments} size={30}/> :\"Disputes\"}\n                            {fetchDisputeContext.disputeData.disputeArray.length !==0 &&<sup><span className=\"badge badge-pill badge-danger\">{fetchDisputeContext.disputeData.disputeArray.length }</span></sup>}</a>\n                        </div>\n\n                        <ReactBootstrap.Nav>\n                            <ReactBootstrap.NavDropdown   title={windowSize.width >768?<Icon className=\"navIcon\" icon={user} size={30} style={{color:\"#28a745\"}}/>:selectedUser.fullName} id=\"collasible-nav-dropdown \" alignRight>\n                                <ReactBootstrap.NavDropdown.Item onClick={()=>setModalShow({...modalShow,editProfile:true})}>Edit Profile</ReactBootstrap.NavDropdown.Item>\n                                <ReactBootstrap.NavDropdown.Item href=\"#\" onClick={()=>setModalShow({...modalShow,alertPopUp:true})}>Log Out</ReactBootstrap.NavDropdown.Item>\n                            </ReactBootstrap.NavDropdown>\n                        </ReactBootstrap.Nav>\n                </ReactBootstrap.Navbar.Collapse>\n            </ReactBootstrap.Navbar>\n            {modalShow.modalsForm? <Suspense fallback={<LoaderScreen/>}><ModalsForm callBack={callBackFetchingInformation} jwt={cookiesData.stateData.jwt} show={modalShow.modalsForm} toBeClosed={true} userName={selectedUser.fullName} hide={()=>{setModalShow({...modalShow,modalsForm:false})}}/></Suspense>:null}\n            {modalShow.addMemberModal?<Suspense fallback={<LoaderScreen/>}><AddMemberToGroup callBack={callBackFetchingInformation} jwt={cookiesData.stateData.jwt} show={modalShow.addMemberModal} hide={()=>{setModalShow({...modalShow,addMemberModal:false})}} /></Suspense>:null}\n                {modalShow.alertPopUp &&<Suspense fallback={<LoaderScreen/>}><AlertModal show={modalShow.alertPopUp} hide={()=>{setModalShow({...modalShow,alertPopUp:false})}} callBack={handleLogout} message={\"Do you wanna logout?\"} /></Suspense>}\n                {modalShow.deleteModal &&<Suspense fallback={<LoaderScreen/>}> <DeletingModal show={modalShow.deleteModal} jwt={cookiesData.stateData.jwt} hide={()=>{setModalShow({...modalShow,deleteModal:false,deleteType:null})}} callBack={callBackFetchingInformation} groups={userContext.userData.groupList} user={userContext.userData.userDetails} selectedType={modalShow.deleteType}/></Suspense>}\n                {modalShow.editProfile &&<Suspense fallback={<LoaderScreen/>}> <ProfileManagementModal show={modalShow.editProfile} hide={()=>setModalShow({...modalShow,editProfile:false})} jwt={cookiesData.stateData.jwt}/></Suspense>}\n        </div>\n    );\n\n};\n\n export default NavBar;\n","import React, {useContext, useEffect, useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {memberSettlementContext, userDetailsContext} from \"../service/Contexts\";\nimport {useMembersCheckbox} from \"../service/useMembersCheckbox\";\nimport {GreenCheckbox} from \"../service/CustomTooltip\";\nimport {useForm} from \"../service/useForm\";\n\n\n\nexport function MembersSelectionModal (props){\n    const memberSettlement = useContext(memberSettlementContext);\n    const userContext = useContext(userDetailsContext);\n    const [members,setGroupMembers]=useState([]);\n    const formEntryInitial = {\n        date:new Date().getFullYear() + \"-\" + (\"0\" + (new Date().getMonth()+1)).slice(-2) + \"-\" + (\"0\" + new Date().getDate()).slice(-2),paidBy:\"\"\n    };\n    useEffect(()=>{\n        if ( typeof userContext.userData.userDetails.fullName !==\"undefined\" )\n        {\n            if(sessionStorage.getItem(\"groupName\") !== null ) {\n                memberSettlement.fetchData.then(e => {\n                    // console.log(\"E\", e);\n                    setGroupMembers(e.groupMemberList);\n                });\n            }\n        }\n    },[userContext.userData,sessionStorage.getItem(\"groupName\")]);\n\n    const submit =()=>{};\n    const ValidateBillEntryForm = ()=>{}\n\n    const { checkBoxes,checkedMemberList,handleCheckBox,isCheckAll,groupMembers} = useMembersCheckbox(members);\n    const {handleSubmit, handleOnChange, error, formField} = useForm(submit,formEntryInitial,ValidateBillEntryForm);\n    console.log(\"se\",checkedMemberList)\n    return (\n        <Modal show={props.show}  onHide={props.hide} centered  aria-labelledby=\"contained-modal-title-vcenter\"   dialogClassName=\"cus-modal-dialog\">\n            <Modal.Header closeButton >\n                <Modal.Title className=\"txt-color \">  Split On </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                    <div className=\"row\">\n                        <label className=\"col-md-3\">Bill Date :</label>\n                        <div className=\"col-md-8\">\n                            <input type=\"date\"\n                                   name=\"date\"\n                                   onChange={handleOnChange}\n                                   value={formField.date}\n                                   className={`form-control  ${error.date && 'is-invalid'}`}\n                                   placeholder=\"Enter Date\"/>\n                            {error.date &&(<div className=\"invalid-feedback\">{error.date}</div>)}\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <label className=\"col-md-3\">Paid By : </label>\n                       <div className=\"col-md-8 mb-3\">\n                           <select\n                               className={`form-control ${error.paidBy && 'is-invalid'}`}\n                               name=\"paidBy\"  value={formField.paidBy}\n                               onChange={handleOnChange}>\n                               <option value=\"\" >Select ....</option>\n                               {\n                                   groupMembers.map((member,index)=>{\n                                       return (<option value={member.name} key={index}>{member.name}</option>);\n                                   })\n                               }\n                           </select>\n                           {error.paidBy &&(<div className=\"invalid-feedback\">{error.paidBy}</div>)}\n                       </div>\n                    </div>\n\n                <ul className=\"cust-chcekbox\">\n                    <li ><GreenCheckbox onChange={(event)=>handleCheckBox(event,-1)} checked={isCheckAll} /><label className=\"col-form-label cust-checkbox-label\">All</label></li>\n                    {checkBoxes}\n                </ul>\n            </Modal.Body>\n            <Modal.Footer>\n               <button className=\"btn btn-success\"  >\n                    Add\n                </button>\n                <button className=\"btn btn-secondary\" onClick={props.hide}>\n                    Cancel\n                </button>\n            </Modal.Footer>\n        </Modal>\n\n    )\n}\nexport default MembersSelectionModal;\n\n","import React, {useEffect, useState} from \"react\";\nimport {GreenCheckbox} from \"./CustomTooltip\";\n\nexport const useMembersCheckbox =(members)=> {\n\n    const [checkedMemberList,setCheckedMemberList] =useState([]);\n    const [isCheckAll,setIsCheckAll]=useState(false);\n    const [groupMembers,setGroupMembers]= useState([]);\n\n    const handleCheckBox=(event,index)=>{\n\n        if(index === -1)\n        {\n            if(event.target.checked) {\n                setIsCheckAll(true);\n                setCheckedMemberList(groupMembers.map((member) => (member.name)));\n                setGroupMembers(groupMembers.map((member) => ({...member, isChecked: true})));\n            }\n            else\n            {\n                setIsCheckAll(false);\n                setCheckedMemberList([]);\n                setGroupMembers(groupMembers.map((member) => ({...member, isChecked: false})));\n            }\n        }\n        else\n        {\n            if (event.target.checked)\n            {\n                setCheckedMemberList([...checkedMemberList,groupMembers[index].name]);\n                setGroupMembers(groupMembers.map((member,i)=>(index===i?{...member,isChecked:true}:member)));\n            }\n            else\n            {\n                setCheckedMemberList(checkedMemberList.filter((member)=>{return (member!==event.target.value)}));\n                setGroupMembers(groupMembers.map((member,i)=>(index===i?{...member,isChecked:false}:member)));\n            }\n\n        }\n    };\n    useEffect(()=>{\n        const readyGroupMembers = members.map(member=>{\n            // console.log(\"memeber\",member);\n            let index = member.fullName.indexOf(\"(\")===-1 ?member.fullName.indexOf(' '):-1;\n            let firstName = index!== -1 ? (member.fullName.substring(0,index)+\"_\"+member.fullName.substring(index+1,index+4)):member.fullName;\n\n            let temp = {\n                \"name\": firstName,\n                \"isChecked\": false\n            };\n            return temp;\n        });\n        setGroupMembers(readyGroupMembers);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[members]);\n\n    console.log(\"members\",groupMembers);\n    const checkBoxes =groupMembers.map((member, index) => {\n        return (\n            <li key={index}>\n                <GreenCheckbox checked={member.isChecked} className=\"custom-checkbox\" value={member.name}\n                               onChange={(event) => handleCheckBox(event, index)}/>\n                <label><span className=\"text-uppercase cust-checkbox-label\">{member.name.substring(0,1)}</span><span style={{fontSize:\"12px\"}}>{member.name.substring(1,member.size)}</span></label>\n            </li>\n        );\n    });\n\n\n    return{\n        checkBoxes,checkedMemberList,handleCheckBox,isCheckAll,groupMembers\n    };\n};\n","import React, {useState, useCallback, useRef, useEffect, useContext} from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { createWorker } from 'tesseract.js';\nimport { RequestHandler } from \"./service/RequestHandler\";\nimport {loginContext, memberSettlementContext, userDetailsContext} from \"./service/Contexts\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport NavBar from \"./NavBar\";\nimport MembersSelectionModal from \"./Model/MembersSelectionModal\";\n// import {ReduceSettlementList} from \"./service/ReduceSettlementList\";\n\n\nfunction UploadBill(props) {\n    const cookiesData = useContext( loginContext );\n    const memberSettlement = useContext(memberSettlementContext);\n\n    const [ isProcessing, setIsProcessing ] = useState(false );\n    const [ ocrText, setOcrText ] = useState('');\n    const [ completedPctg, setCompletedPctg ] = useState('0.00' );\n    const jwt =  cookiesData.stateData.jwt;\n    const [ worker, setWorker ] = useState( React.createRef() );\n    // const [ billTexts, setBillTexts ] = useState( [] );\n    const [ results, setResults ] = useState( [] );\n    const [upImg, setUpImg] = useState();\n    const imgRef = useRef(null);\n    const [cropReady, setCropReady] = useState(false);\n    const [cropComplete, setCropComplete] = useState(false);\n    const [previewUrl, setPreviewUrl] = useState();\n    const [croppedBlob, setCroppedBlob] = useState(null);\n\n    let userSelectedItems= [];\n    const [isMemberSelectionOpened,setMemberSelectionOpened] = useState(false);\n\n    const callBackFetchingInformation =()=>{\n\n        memberSettlement.dispatch({type:\"ADD\",payload:jwt});\n\n    };\n\n\n    useEffect(()=>{\n        // Logs the output object to Update Progress, which\n        // checks for Tesseract JS status & Updates the progress\n        setWorker( createWorker({\n            logger: m => updateProgressAndLog(m),\n        }));\n    },[]);\n\n    useEffect(()=>{\n        if (ocrText !== ''){\n            const val = { billText : ocrText };\n            parseBillText( val );\n        }\n    },[ ocrText ]);\n\n    // useEffect( ()=>{\n    //     if (results.length > 0) {\n    //         RequestHandler('/homeDetails',groupName,'get',jwt).then(result=>{\n    //             console.log(result);\n    //             setGroupMembers(result.groupMemberList);\n    //         });\n    //     }\n    // }, [ results ] );\n\n    const updateProgressAndLog = ( m )=>{\n\n        // Maximum value out of which percentage needs to be\n        // calculated. In our case it's 0 for 0 % and 1 for Max 100%\n        // DECIMAL_COUNT specifies no of floating decimal points in our\n        // Percentage\n        const MAX_PARCENTAGE = 1 ;\n        const DECIMAL_COUNT = 2 ;\n\n        if( m.status === \"recognizing text\" ){\n            const pctg = ( m.progress / MAX_PARCENTAGE ) * 100;\n            setCompletedPctg(pctg.toFixed( DECIMAL_COUNT ));\n        }\n    };\n\n    async function doOCR( file ) {\n        setIsProcessing(true);\n        //\n        // Loading tesseract.js functions\n        await worker.load();\n        // Loadingg language as 'English'\n        await worker.loadLanguage('eng');\n        await worker.initialize( 'eng' );\n        // Sending the File Object into the Recognize function to\n        // parse the data\n        const { data: { text } } = await worker.recognize( file );\n\n        setIsProcessing(false);\n        setOcrText(text);\n    }\n\n    function parseBillText( val ) {\n        RequestHandler('/parseBill', val, 'post', jwt).then(result => {\n               let res = [];\n                result.map((x)=>{\n                    res.push({SN:x.SN, item:x.item, price:x.price});\n                });\n                // console.log(res);\n                // setResults(result);\n                setResults(res);\n        });\n    }\n\n    const columns = [{\n        dataField: 'SN',\n        text: 'SN'\n    }, {\n        dataField: 'item',\n        text: 'Item Description'\n    }, {\n        dataField: 'price',\n        text: 'Item Price'\n    }];\n\n    const data = results;\n\n    const selectRow = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        onSelect: (row, isSelect, rowIndex, e) => {\n            // console.log(row.SN);\n            // console.log(row.item);\n            // console.log(row.price);\n            // console.log(isSelect);\n            if (isSelect) {\n                userSelectedItems.push(row);\n            }\n            else{\n               if (userSelectedItems.length !== 0)\n               {\n                 userSelectedItems = userSelectedItems.filter(item=>(item.SN !== row.SN));\n               }\n            }\n            console.log(\"from one 1\",userSelectedItems);\n        },\n        onSelectAll: (isSelect, rows, e) => {\n            // console.log(rows);\n            // console.log(isSelect);\n            if (isSelect)\n            {\n                userSelectedItems = [];\n                userSelectedItems =rows;\n            }\n            else {\n                userSelectedItems = [];\n            }\n            console.log(\"all items\",userSelectedItems);\n        }\n\n    };\n\n\n    const [crop, setCrop] = useState({\n        unit: '%',\n        x: 13,\n        y: 13,\n        width: 25,\n        height: 25\n    });\n\n\n    const onSelectFile = e => {\n        if (e.target.files && e.target.files.length > 0) {\n            // loadImage(\n            //     e.target.files[0],\n            //     (img) => {\n            //       var base64data = img.toDataURL(`image/jpeg`);\n            //       setUpImg(base64data);\n            //     },\n            //     { orientation: 1, canvas: true }\n            // );\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () => setUpImg(reader.result));\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n    const onLoad = useCallback(img => {\n        imgRef.current = img;\n    }, []);\n\n    useEffect(()=>{\n        if (croppedBlob && cropComplete){\n            // BillOCR.doOCR();\n        }\n    }, [croppedBlob]);\n\n    const makeClientCrop = async crop => {\n        console.log(crop);\n        if (imgRef.current && crop.width && crop.height) {\n            await createCropPreview(imgRef.current, crop, \"newFile.jpeg\");\n        }\n    };\n\n    const cropReadyChange = () => {\n        if (!cropReady){\n            setCropReady(true);\n        }\n    };\n\n    const cropCompleteChange = () => {\n        if (!cropComplete) {\n            setCropComplete(true);\n        }\n    };\n\n    const createCropPreview = async (image, crop, fileName) => {\n        const canvas = document.createElement(\"canvas\");\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n        const ctx = canvas.getContext(\"2d\");\n\n        ctx.drawImage(\n            image,\n            crop.x * scaleX,\n            crop.y * scaleY,\n            crop.width * scaleX,\n            crop.height * scaleY,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        return new Promise((resolve, reject) => {\n            canvas.toBlob(blob => {\n                if (!blob) {\n                    reject(new Error(\"Canvas is empty\"));\n                    return;\n                }\n                blob.name = fileName;\n                console.log(blob);\n                window.URL.revokeObjectURL(previewUrl);\n                setCroppedBlob(blob);\n                setPreviewUrl(window.URL.createObjectURL(blob));\n            }, \"image/jpeg\");\n        });\n    };\n    // console.log(\"groupMembers\",groupMembers)\n    return (\n\n        <div className=\"App\">\n            <header>\n                <NavBar\n                    mainProps={props}\n                    isDisputeDisplay={false}\n                    callBack={callBackFetchingInformation}\n                />\n            </header>\n            <div className=\"upload\">\n                <div className=\"container\">\n                    <div style={{marginTop : \"10%\"}} className=\"row\">\n                        <div className=\"col-md-4\">\n\n                        </div>\n                        <div className=\"col-md-4\">\n                            {/*<FilePond ref={ ref => setPond( ref ) } onaddfile={ ( err, file ) => { doOCR( file ); } }*/}\n                            {/*          onremovefile={ ( err, file ) => { setOcrText( '' ); setResults( [] ); } }*/}\n                            {/*/>*/}\n                            <input type=\"file\" accept=\"image/*\" onChange={onSelectFile} />\n                        </div>\n                        <div className=\"col-md-4\">\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            {/*{console.log('UpImg: ' + upImg)}*/}\n            <div className=\"crop\">\n                {upImg && !cropReady && <img alt=\"selected Image\" src={upImg} style={{maxHeight : \"300px\"}}/>}\n                {upImg && !cropReady && <input type=\"button\" value=\"Crop\" onClick={cropReadyChange}/>}\n                {cropReady && !cropComplete && <ReactCrop\n                    src={upImg}\n                    onImageLoaded={onLoad}\n                    crop={crop}\n                    onChange={c => setCrop(c)}\n                    onComplete={makeClientCrop}\n                />}\n                {cropReady && !cropComplete && <input type=\"button\" value=\"Complete\" onClick={cropCompleteChange}/>}\n                <div>\n                    {cropComplete && previewUrl && <img alt=\"Crop preview\" src={previewUrl} style={{maxHeight : \"300px\"}}/>}\n                </div>\n                {upImg && <input type=\"button\" value=\"Submit\" onClick={()=>doOCR(croppedBlob != null ? croppedBlob: upImg)}/>}\n            </div>\n            <div className=\"result\">\n                <div>\n                    <h5 className=\"card-header text-center font-weight-bold text-uppercase py-4\">\n                        <div style={{margin : \"1%\", textAlign: \"left\"}} className=\"row\">\n                            <div className=\"col-md-12\">\n                                <i className={\"fas fa-sync fa-2x \" + (isProcessing ? \"fa-spin\" : \"\")}></i> <span className=\"status-text\">{isProcessing ? `Processing Image ( ${completedPctg} % )` : \"Bill\"} </span>\n                            </div>\n\n                        </div>\n\n                    </h5>\n                </div>\n                <div>\n                    <button className=\"btn btn-success\" onClick={()=>setMemberSelectionOpened(true)}>Add</button>\n                    <BootstrapTable\n                        keyField='SN'\n                        data={ data }\n                        columns={ columns }\n                        selectRow={ selectRow }\n                    />\n                </div>\n            </div>\n            {isMemberSelectionOpened && <MembersSelectionModal selectedItems={userSelectedItems} show={isMemberSelectionOpened} hide={()=>setMemberSelectionOpened(false)} />}\n        </div>\n    );\n}\n\nexport default UploadBill;\n"],"sourceRoot":""}