{"version":3,"sources":["Pages/service/ValidateForm.js","Pages/Model/CreateGroupModel.js"],"names":["validateRegisterForm","formField","error","password","confirmPassword","fullName","isNaN","phoneNumber","length","userName","test","ValidateBillEntryForm","formData","errors","description","amount","paidBy","enteredDate","validateCreateGroup","gName","name0","validateAddEdMember","name","number","ModalsForm","props","useState","addedFields","setaddedFields","show","setShow","status","message","successMessage","setSuccesMessage","toBeClosed","checkClosing","setClosing","systemGroups","setSystemGroups","isAvailable","setAvailability","useForm","value","addedFeildObj","reduce","accumulator","currentValue","index","console","log","RequestHandler","jwt","then","result","window","location","reload","handleOnChange","handleSubmit","changeValue","useEffect","centered","onHide","hide","onSubmit","Header","closeButton","Title","className","Body","htmlFor","type","id","onChange","event","matchedName","filter","toLowerCase","trim","target","findAvailableGroup","placeholder","onClick","icon","plus","map","phoneField","key","required","i","handleChange","removeField","minus","Footer","disabled"],"mappings":"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","file":"static/js/14.9ad4b6c7.chunk.js","sourcesContent":["export const validateRegisterForm = (formField)=>{\n    let error ={};\n    if (formField.password !== formField.confirmPassword)\n    {\n        error.confirmPassword = \"Confirm Password didn't match\";\n    }\n    if (formField.fullName === \"\")\n    {\n        error.fullName = \"Please enter the name !!\";\n    }\n    else if (!isNaN(formField.fullName))\n    {\n        error.fullName = \"Enter valid name\"\n    }\n    if (formField.phoneNumber === \"\")\n    {\n        error.phoneNumber = \"Please enter the phone number !!\";\n    }\n    else if (formField.phoneNumber.length>15)\n    {\n        error.phoneNumber = \"Please Enter valid phone number\";\n    }\n    if (formField.userName === \"\")\n    {\n        error.userName = \"Please enter the userName !!\";\n    }\n    else if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(formField.userName))\n    {\n        error.userName = \"Please use valid email address \"\n    }\n    if (formField.password === \"\")\n    {\n        error.password = \"Please enter the password !!\";\n    }\n    else if (formField.password.length <=6)\n    {\n        error.password = \"Password should be more than 6 character\";\n    }\n    return error;\n};\n\nexport const ValidateBillEntryForm =(formData)=>{\n    let errors = {};\n    if (formData.description === \"\")\n    {\n        errors.description = \"Please enter description\";\n    }\n    if (formData.amount === \"\")\n    {\n        errors.amount = \"Please enter amount\";\n    }\n    else if (isNaN(formData.amount))\n    {\n        errors.amount = \"Amount should be number\";\n    }\n    if (formData.paidBy === \"\")\n    {\n        errors.paidBy = \"Please select the paid By person\";\n    }\n    if (formData.enteredDate ===\"\")\n    {\n        errors.enteredDate = \"Please enter data\";\n    }\n    return errors;\n};\n\nexport  const validateCreateGroup = formData =>{\n    let error ={};\n    if (formData.gName === \"\")\n    {\n        error.gName = \"Please enter group name\";\n    }\n    if (formData.name0 === \"\")\n    {\n        error.name0 = \"Please enter at least one member's phone number\"\n    }\n    return error;\n};\n\nexport  const validateAddEdMember = formData =>{\n    let error = {}\n    if(formData.name === \"\")\n    {\n        error.name = \"Please enter member's name\";\n    }\n    if (formData.number === \"\")\n    {\n        error.number = \"Please enter phone number\";\n    }\n    else if (formData.number.length >14 )\n    {\n        error.number = \"Please enter valid phone number\";\n    }\n    return error;\n};\n","import React, { useEffect, useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Icon } from 'react-icons-kit';\nimport {plus,minus}  from 'react-icons-kit/fa/';\nimport {RequestHandler} from \"../service/RequestHandler\";\nimport {useForm} from \"../service/useForm\";\nimport {validateCreateGroup} from \"../service/ValidateForm\";\n\nexport function ModalsForm (props){\n    const [addedFields,setaddedFields] = useState([]);\n    const [show,setShow] = useState(false);\n    const [successMessage,setSuccesMessage]=useState({status:false,message:\"\"});\n    const [checkClosing,setClosing] = useState(props.toBeClosed);\n    const [systemGroups, setSystemGroups ] = useState([]);\n    const [isAvailable, setAvailability] = useState({});\n    const submit=(value)=>{\n\n        let addedFeildObj = addedFields.reduce((accumulator,currentValue,index)=>{\n            accumulator[\"name\"+(index+1)] = currentValue;\n            return accumulator;\n        },{});\n\n        let formData = {\n            ...formField,\n            ...addedFeildObj,\n            \"profileName\":props.userName,\n        };\n\n        console.log(\"formDatra\",formData);\n        RequestHandler('/createGroup',formData,'post',props.jwt).then(result=>{\n            console.log(\"here is the result\",result);\n            if (result)\n            {\n                setSuccesMessage({status: true,message:\"Successfully created Group\"});\n                setClosing(true);\n                window.location.reload();\n\n            }\n            else\n            {\n                setSuccesMessage({...successMessage,message: \"Failed to create group. Please check your details and try resubmitting it\"})\n            }\n        });\n        setaddedFields([]);\n    }\n\n    const handleAddField=()=>{\n        setaddedFields([ ...addedFields,\"\"])\n    }\n    const handleChange= (event,index)=>{\n       setaddedFields(addedFields.map((value,i)=>{\n          return  i ===index ?event.target.value:value\n        }))\n    }\n    const removeField=(index)=>{\n        setaddedFields(addedFields.filter((phoneField,i)=>{return (i !== index)}))\n    };\n\n    const findAvailableGroup=(event)=>{\n\n        const matchedName = systemGroups.filter((name)=>{\n            if (name.toLowerCase().trim() === event.target.value.toLowerCase().trim()){\n                return name;\n            }\n        });\n\n        if (event.target.value !== \"\")\n        {\n            if (matchedName.length !== 0)\n            {\n                setAvailability({status:\"no\"});\n\n            }\n            else{\n                setAvailability({status:\"yes\"});\n            }\n        }\n        else{\n            setAvailability(\"\");\n        }\n    };\n\n    const {error,formField,handleOnChange,changeValue,handleSubmit} = useForm(submit,{\"gName\":\"\",\"name0\":\"\"},validateCreateGroup);\n    useEffect(()=>{\n        setShow(props.show);\n        if (systemGroups.length ===0)\n        {\n            RequestHandler(\"allGroups\",\"\",\"get\",props.jwt).then(result=>{\n                setSystemGroups(result);\n                })\n        }\n    },[props]);\n\n    return (\n        <Modal show={show} centered onHide={checkClosing?props.hide:()=>{}}  >\n            <form onSubmit={handleSubmit}>\n            <Modal.Header closeButton>\n                <Modal.Title className=\"txt-color \"> Create Group</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {successMessage.status ? <div className=\"text-success\">{successMessage.message}</div>:(<div className=\"alert-danger\">{error.message}</div>)}\n                <div className=\"md-form mb-4 row\">\n                    <label className=\"col-form-label col-sm-3 \" htmlFor=\"gName\">Group Name:</label>\n                    <div className=\"col-sm-8 \">\n                        <input type=\"text\" name=\"gName\" id=\"gName\" onChange={(event =>{handleOnChange(event); findAvailableGroup(event)})} value={formField.gName} className={`form-control ${error.gName && 'is-invalid'}`}\n                               placeholder=\"Group name should be unique...\"/>\n                        {error.gName &&(<div className=\"invalid-feedback\">{error.gName}</div>)}\n                        {isAvailable.status&&(isAvailable.status === \"yes\"?<p className=\"text-success small\">Group name is available.</p>:<p className=\"text-danger small\">Group name is not available.</p>)}\n                    </div>\n\n                </div>\n                <div className=\"md-form mb-7\">\n                    <div className=\"table-responsive\">\n                        <table className=\"table \" id=\"dynamic_field\">\n                            <tbody>\n                            <tr>\n                                <td><input type=\"text\" name=\"name0\" placeholder=\"Member's Phone Number\"\n                                           className={`form-control  ${error.name0 && 'is-invalid'}`} value={formField.name0} onChange={handleOnChange}/>\n                                    {error.name0 &&(<div className=\"invalid-feedback\">{error.name0}</div>)}\n                                </td>\n                                <td>\n                                    <button type=\"button\"  className=\"btn btn-success d-block\" onClick={handleAddField}> <Icon icon={plus}></Icon>\n                                    </button>\n                                </td>\n                            </tr>\n                            {\n                                addedFields.map((phoneField,index)=>{\n                                    return(\n                                        <tr key={index}>\n                                            <td><input type=\"text\" required={true} value={phoneField} onChange={(event)=>{handleChange(event,index)}} placeholder=\"Member's Phone Number\"\n                                                       className=\"form-control name_list\"/></td>\n                                            <td>\n                                                <button type=\"button\"  className=\"btn btn-danger d-block\" onClick={()=>removeField(index)}> <Icon icon={minus}></Icon>\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-secondary\" type=\"button\" onClick={checkClosing?props.hide:null}>\n                    Close\n                </button>\n                <button className=\"btn btn-success\" disabled={isAvailable.status===\"no\"&& true} type=\"submit\" >\n                    Save\n                </button>\n            </Modal.Footer>\n            </form>\n        </Modal>\n    )\n}\nexport default ModalsForm;\n\n"],"sourceRoot":""}