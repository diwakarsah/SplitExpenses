{"version":3,"sources":["Pages/Model/DeletingModal.js"],"names":["DeletingModal","props","members","useContext","memberSettlementContext","useState","checkedMemberList","setCheckedMemberList","groupMembers","setGroupMembers","result","setResult","handleCheckBox","event","index","target","checked","name","map","member","i","isChecked","selectedType","filter","groupName","value","fullName","useEffect","readyGroupMembers","groups","reduce","acc","curr","createdBy","user","id","push","fetchData","then","groupMemberList","show","console","log","onHide","hide","aria-labelledby","centered","dialogClassName","Header","closeButton","Title","className","Body","error","success","length","key","onChange","Footer","onClick","data","groupId","RequestHandler","jwt","response","ok","sessionStorage","removeItem","window","location","reload","getItem"],"mappings":"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","file":"static/js/18.f83315be.chunk.js","sourcesContent":["import React, {useEffect, useState,useContext} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {GreenCheckbox} from \"../service/CustomTooltip\";\nimport {memberSettlementContext} from \"../service/Contexts\";\nimport {RequestHandler} from \"../service/RequestHandler\";\n\nexport function DeletingModal (props){\n    const members = useContext(memberSettlementContext);\n    const [checkedMemberList,setCheckedMemberList] =useState([]);\n    const [groupMembers,setGroupMembers] = useState([]);\n    const [result,setResult]=useState({});\n    const handleSubmit = ()=>{\n        if (props.selectedType===\"group\")\n        {\n            const data= checkedMemberList.reduce((acc,curr)=>{\n                return  curr.groupId +\",\"+acc\n            },\"\");\n            console.log(\"data\",data);\n            RequestHandler(\"/deleteGroup\",data,'delete',props.jwt).then(response=>{\n               if (typeof response.ok !== \"undefined\" && !response.ok)\n               {\n                   setResult({...result,error: \"Error!! while deleting group.Please try again\"})\n               }\n               else {\n                   sessionStorage.removeItem(\"groupName\")\n                   sessionStorage.removeItem(\"isShown\")\n                   window.location.reload();\n               }\n            });\n        }\n\n        else {\n               let data= checkedMemberList.reduce((acc,curr)=>{\n                   return   curr.id +\",\"+acc\n               },\"\");\n               data = data + sessionStorage.getItem(\"groupName\");\n               console.log(\"data\",data);\n               RequestHandler(\"deleteMember\",data,'delete', props.jwt).then(response=>{\n                   console.log(\"res\",response.ok);\n                  if (typeof response.ok !== \"undefined\" && !response.ok )\n                  {\n                      setResult({error:\"Error!! Something went wrong while deleting. Please try again\"})\n                  }\n                  else {\n                      console.log(\"asd\",response )\n                      // props.callBack();\n                      // props.hide();\n                  }\n               });\n        }\n\n    };\n\n    const handleCheckBox=(event,index)=>{\n            if (event.target.checked)\n            {\n                setCheckedMemberList([...checkedMemberList,groupMembers[index].name]);\n                setGroupMembers(groupMembers.map((member,i)=>(index===i?{...member,isChecked:true}:member)));\n            }\n            else\n            {\n                if (props.selectedType ===\"group\")\n                {\n                    setCheckedMemberList(checkedMemberList.filter((member)=>{return (member.groupName!==event.target.value)}));\n                }\n                else\n                {\n                    setCheckedMemberList(checkedMemberList.filter((member)=>{return (member.fullName!==event.target.value)}));\n                }\n\n                setGroupMembers(groupMembers.map((member,i)=>(index===i?{...member,isChecked:false}:member)));\n            }\n    };\n\n    useEffect(()=>{\n        let readyGroupMembers = null;\n       if (props.selectedType===\"group\")\n       {\n           readyGroupMembers = props.groups.reduce((acc,curr)=>{\n               if (curr.createdBy === props.user.id)\n               {\n                   acc.push( {name:curr,isChecked:false})\n               }\n               return acc\n\n           },[]);\n           setGroupMembers(readyGroupMembers);\n       }\n       else {\n\n           members.fetchData.then(result=>{\n               readyGroupMembers = result.groupMemberList.reduce((acc,curr)=>{\n                       if (curr.id !== props.user.id)\n                       {\n                           acc.push( {name:curr,isChecked:false})\n                       }\n                       return acc\n\n                   },[]);\n                setGroupMembers(readyGroupMembers);\n               })\n       }\n\n\n    },[props.groups,props.show,props.selectedType,props.user,members]);\n    console.log(\"asd\",checkedMemberList);\n    return (\n        <Modal show={props.show}  onHide={props.hide}   aria-labelledby=\"contained-modal-title-vcenter\" centered  dialogClassName=\"cus-modal-dialog\">\n            <Modal.Header closeButton>\n                <Modal.Title className=\"txt-color\">  Please Select to delete </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {result.error&&<h5 className=\"text-danger\">{result.error}</h5>}\n                {result.success&&<h5 className=\"text-success\">{result.success}</h5>}\n               {groupMembers.length!==0?\n                   <div className={`from-group `}>\n                    <ul>\n                    {props.selectedType ===\"group\"?groupMembers.map((member,index)=>{\n                        return (\n                            <li key={index}>\n                                    <GreenCheckbox  checked={member.isChecked}  className=\"custom-checkbox\" value={member.name.groupName} onChange={(event)=>handleCheckBox(event,index)}/>\n                                   <label><span className=\"text-uppercase\">{member.name.groupName}</span></label>\n                               </li>\n                        );\n                    }):groupMembers.map((member,index)=>{\n                        return (\n                            <li key={index}>\n                                <GreenCheckbox  checked={member.isChecked}  className=\"custom-checkbox\" value={member.name.fullName} onChange={(event)=>handleCheckBox(event,index)}/>\n                                <label><span className=\"text-uppercase\">{member.name.fullName}</span></label>\n                            </li>\n                        );\n                    })}\n                    </ul>\n                    </div>:\n                   <h5 className=\"text-danger\">\n                       {props.selectedType ===\"group\"? \"There is not any group created by you ..\":\"No members to delete in this group...\"}\n                   </h5>\n               }\n            </Modal.Body>\n            <Modal.Footer>\n\n                {checkedMemberList.length !==0 &&<button className=\"btn btn-success\"  onClick={handleSubmit}>\n                    Delete\n                </button>}\n                <button className=\"btn btn-secondary\" onClick={props.hide}>\n                    Close\n                </button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\nexport default DeletingModal;\n"],"sourceRoot":""}