{"version":3,"sources":["Pages/service/useForm.js","Pages/service/CustomTooltip.js","Pages/service/useWindowSize.js","Pages/service/ValidateForm.js","Pages/Model/AlertModal.js","Pages/Model/CreateGroupModel.js","Pages/NavBar.js","img/happy.png","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","Pages/billingDetailList.js","Pages/Footer.js","Pages/Model/DisplayGroupModal.js","Pages/SettlementListDisplay.js","Pages/Model/DisputeNotifcationModal.js","Pages/service/ReduceSettlementList.js","Pages/LoginLandingPage.js"],"names":["useForm","callBack","initialState","validate","useState","formField","setFormField","error","setError","handleOnChange","event","target","name","value","changeFormField","handleSubmit","preventDefault","Object","keys","length","LightTooltip","withStyles","theme","tooltip","backgroundColor","color","boxShadow","shadows","fontSize","Tooltip","RedTooltip","GreenCheckbox","root","green","checked","props","useWindowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","validateRegisterForm","password","confirmPassword","fullName","isNaN","phoneNumber","userName","test","ValidateBillEntryForm","formData","errors","description","amount","paidBy","enteredDate","validateCreateGroup","gName","name0","validateAddEdMember","number","AlertModal","errorAlert","message","substring","show","onHide","hide","centered","aria-labelledby","dialogClassName","Header","closeButton","Title","className","Body","Footer","onClick","ModalsForm","addedFields","setaddedFields","setShow","status","successMessage","setSuccesMessage","toBeClosed","checkClosing","setClosing","systemGroups","setSystemGroups","isAvailable","setAvailability","addedFeildObj","reduce","accumulator","currentValue","index","console","log","RequestHandler","jwt","then","result","location","reload","changeValue","onSubmit","htmlFor","type","id","onChange","matchedName","filter","toLowerCase","trim","findAvailableGroup","placeholder","icon","plus","map","phoneField","key","required","i","handleChange","removeField","minus","disabled","lazy","AddMemberToGroup","DeletingModal","ProfileManagementModal","NavBar","cookiesData","useContext","loginContext","userContext","userDetailsContext","fetchDisputeContext","disputeContext","memberSettlement","memberSettlementContext","selectedUser","userData","userDetails","modalsForm","addMemberModal","alertPopUp","deleteModal","deleteType","editProfile","modalShow","setModalShow","callBackFetchingInformation","dispatch","payload","stateData","fixed","collapseOnSelect","expand","variant","Brand","href","src","require","Toggle","aria-controls","Collapse","Link","title","groupList","groups","Item","active","selectedGroup","sessionStorage","setItem","groupName","createdBy","group","plusCircle","trashO","Divider","userPlus","parseInt","getItem","data-toggle","data-placement","isDisputeDisplay","loadDispute","comments","size","disputeData","disputeArray","user","style","alignRight","fallback","mainProps","history","push","selectedType","module","exports","React","createContext","AccordionToggle","forwardRef","_ref","ref","_ref$as","as","Component","children","eventKey","_objectWithoutPropertiesLoose","accordionOnClick","contextEventKey","AccordionContext","onSelect","SelectableContext","e","useAccordionToggle","createElement","_extends","AccordionCollapse","in","Children","only","displayName","Accordion","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","bsPrefix","controlledProps","useBootstrapPrefix","Provider","classNames","NewAddedBillList","highlightDisputedRow","dispute","acc","curr","billingDetails","transId","handleRemove","bill","addBilling","arraySplit","split","convertDate","givenDate","tempDate","Date","getFullYear","getMonth","getDate","mobileView","date","ReactBootstrap","caretDown","enteredId","arrow","callBackEdit","edit","remove","handleDispute","bell","splitedOn","stringNames","interactive","DisplayGroupModal","sessionResult","Modal","onExiting","SettlementListDisplay","settlementArray","entries","settlementList","settlementId","selectedItem","setSelectedItem","showAlert","setShowAlert","isActive","setActive","keyObjects","returnValue","isEditable","settlementDoneBy","caretUp","placement","billingList","settle","settlementPaymentDetails","person","paidTo","toFixed","startDate","endDate","DisputeNotifcationModal","slice","BillEntryForm","FinalSettlement","DisputeModal","DisputePage","LoginLanding","todayDate","mainBody","disputePage","isLoading","setLoading","setGroupName","setUser","setBillingList","setSettlementList","setGroupList","displayModals","setDisplayModals","groupMembers","setGroupMembers","checkChanges","setChanges","isModalShown","finalSettlement","setFinalSettlement","selectedEditedBill","setSelectedEditedBill","searchedDate","setSearchedDate","filteredSettlements","setFilteredSettlements","setDispute","callBackAddBillingList","handleSearchFilter","cur","includes","fetchBillInfo","newGroupName","fetchData","groupMemberList","reduceSettlement","pre","Array","LoaderScreen","overflow","toDateString","memberName","addingBillingModal","float","ok","calculator","disputeModal","mailReplyAll","marginBottom","search","gear","CreateGroupModel","creatingGroupModal","selectedBill","member","data","calData","totalSpending","members","userID"],"mappings":"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","file":"static/js/7.23204d9e.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nexport const useForm = (callBack,initialState={},validate)=>{\n    const [formField,setFormField] = useState(initialState);\n    const [error,setError] = useState({});\n\n    const handleOnChange=event=>{\n        setFormField({...formField, [event.target.name]:event.target.value});\n        event.target.name && delete error[event.target.name];\n    };\n\n    const changeFormField = value=>{\n        setFormField(value);\n    };\n    const handleSubmit=event=>{\n        event.preventDefault();\n        if (Object.keys(validate(formField)).length === 0)\n        {\n            callBack(event.target.value);\n            setFormField(initialState);\n            setError({});\n        }\n        else {\n            setError(validate(formField));\n        }\n    };\n\n    return {\n        handleSubmit,\n        handleOnChange,\n        changeFormField,\n        error,\n        formField\n    }\n};\n","\nimport {withStyles} from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport {green} from \"@material-ui/core/colors\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport React from \"react\";\n\n//styling tool tip\nexport const LightTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: '#267c39',\n        color: 'white',\n        boxShadow: theme.shadows[1],\n        fontSize: 12,\n    },\n}))(Tooltip);\n\nexport const RedTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: 'red',\n        color: 'white',\n        boxShadow: theme.shadows[1],\n        fontSize: 12,\n    },\n}))(Tooltip);\n\nexport const GreenCheckbox = withStyles({\n    root: {\n        color: green[400],\n        '&$checked': {\n            color: green[600],\n        },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n","import {useEffect,useState} from 'react';\n\n\nexport const  useWindowSize=()=>{\n\n    const isClient = typeof window === 'object';\n\n    const getSize=()=> {\n\n        return {\n\n            width: isClient ? window.innerWidth : undefined,\n\n            height: isClient ? window.innerHeight : undefined\n\n        };\n\n    };\n\n\n\n    const [windowSize, setWindowSize] = useState(getSize);\n\n\n\n    useEffect(() => {\n\n        if (!isClient) {\n\n            return false;\n\n        }\n\n\n\n        const handleResize=()=> {\n\n            setWindowSize(getSize());\n\n        };\n\n\n\n        window.addEventListener('resize', handleResize);\n\n        return () => window.removeEventListener('resize', handleResize);\n\n    }, []);\n\n\n\n    return windowSize;\n\n}\n","export const validateRegisterForm = (formField)=>{\n    let error ={};\n    if (formField.password !== formField.confirmPassword)\n    {\n        error.confirmPassword = \"Confirm Password didn't match\";\n    }\n    if (formField.fullName === \"\")\n    {\n        error.fullName = \"Please enter the name !!\";\n    }\n    else if (!isNaN(formField.fullName))\n    {\n        error.fullName = \"Enter valid name\"\n    }\n    if (formField.phoneNumber === \"\")\n    {\n        error.phoneNumber = \"Please enter the phone number !!\";\n    }\n    else if (formField.phoneNumber.length>15)\n    {\n        error.phoneNumber = \"Please Enter valid phone number\";\n    }\n    if (formField.userName === \"\")\n    {\n        error.userName = \"Please enter the userName !!\";\n    }\n    else if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(formField.userName))\n    {\n        error.userName = \"Please use valid email address \"\n    }\n    if (formField.password === \"\")\n    {\n        error.password = \"Please enter the password !!\";\n    }\n    else if (formField.password.length <=6)\n    {\n        error.password = \"Password should be more than 6 character\";\n    }\n    return error;\n};\n\nexport const ValidateBillEntryForm =(formData)=>{\n    let errors = {};\n    if (formData.description === \"\")\n    {\n        errors.description = \"Please enter description\";\n    }\n    if (formData.amount === \"\")\n    {\n        errors.amount = \"Please enter amount\";\n    }\n    else if (isNaN(formData.amount))\n    {\n        errors.amount = \"Amount should be number\";\n    }\n    if (formData.paidBy === \"\")\n    {\n        errors.paidBy = \"Please select the paid By person\";\n    }\n    if (formData.enteredDate ===\"\")\n    {\n        errors.enteredDate = \"Please enter data\";\n    }\n    return errors;\n};\n\nexport  const validateCreateGroup = formData =>{\n    let error ={};\n    if (formData.gName === \"\")\n    {\n        error.gName = \"Please enter group name\";\n    }\n    if (formData.name0 === \"\")\n    {\n        error.name0 = \"Please enter at least one member's phone number\"\n    }\n    return error;\n};\n\nexport  const validateAddEdMember = formData =>{\n    let error = {}\n    if(formData.name === \"\")\n    {\n        error.name = \"Please enter member's name\";\n    }\n    if (formData.number === \"\")\n    {\n        error.number = \"Please enter phone number\";\n    }\n    else if (formData.number.length >14 )\n    {\n        error.number = \"Please enter valid phone number\";\n    }\n    return error;\n};\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\n\n\nexport function AlertModal (props){\n\n    const handleOkay = ()=>{\n        props.callBack();\n        props.hide()\n    };\n    const errorAlert = props.message.substring(0,5);\n\n    return (\n        <Modal show={props.show}  onHide={props.hide} centered  aria-labelledby=\"contained-modal-title-vcenter\"   dialogClassName=\"cus-modal-dialog\">\n        <Modal.Header closeButton >\n            <Modal.Title className=\"txt-color \">  Alert </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <p className={`alertMessage ${errorAlert ===\"Error\"?\"text-danger\":\"\"}`}> {props.message}</p>\n        </Modal.Body>\n        <Modal.Footer>\n            {errorAlert!==\"Error\"&&<button className=\"btn btn-success\" onClick={handleOkay} >\n               Yes\n            </button>}\n            <button className=\"btn btn-secondary\" onClick={props.hide}>\n                No\n            </button>\n        </Modal.Footer>\n    </Modal>\n\n    )\n}\nexport default AlertModal;\n\n","import React, { useEffect, useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Icon } from 'react-icons-kit';\nimport {plus,minus}  from 'react-icons-kit/fa/';\nimport {RequestHandler} from \"../service/RequestHandler\";\nimport {useForm} from \"../service/useForm\";\nimport {validateCreateGroup} from \"../service/ValidateForm\";\n\nexport function ModalsForm (props){\n    const [addedFields,setaddedFields] = useState([]);\n    const [show,setShow] = useState(false);\n    const [successMessage,setSuccesMessage]=useState({status:false,message:\"\"});\n    const [checkClosing,setClosing] = useState(props.toBeClosed);\n    const [systemGroups, setSystemGroups ] = useState([]);\n    const [isAvailable, setAvailability] = useState({});\n    const submit=(value)=>{\n\n        let addedFeildObj = addedFields.reduce((accumulator,currentValue,index)=>{\n            accumulator[\"name\"+(index+1)] = currentValue;\n            return accumulator;\n        },{});\n\n        let formData = {\n            ...formField,\n            ...addedFeildObj,\n            \"profileName\":props.userName,\n        };\n\n        console.log(\"formDatra\",formData);\n        RequestHandler('/createGroup',formData,'post',props.jwt).then(result=>{\n            console.log(\"here is the result\",result);\n            if (result)\n            {\n                setSuccesMessage({status: true,message:\"Successfully created Group\"});\n                setClosing(true);\n                window.location.reload();\n\n            }\n            else\n            {\n                setSuccesMessage({...successMessage,message: \"Failed to create group. Please check your details and try resubmitting it\"})\n            }\n        });\n        setaddedFields([]);\n    }\n\n    const handleAddField=()=>{\n        setaddedFields([ ...addedFields,\"\"])\n    }\n    const handleChange= (event,index)=>{\n       setaddedFields(addedFields.map((value,i)=>{\n          return  i ===index ?event.target.value:value\n        }))\n    }\n    const removeField=(index)=>{\n        setaddedFields(addedFields.filter((phoneField,i)=>{return (i !== index)}))\n    };\n\n    const findAvailableGroup=(event)=>{\n\n        const matchedName = systemGroups.filter((name)=>{\n            if (name.toLowerCase().trim() === event.target.value.toLowerCase().trim()){\n                return name;\n            }\n        });\n\n        if (event.target.value !== \"\")\n        {\n            if (matchedName.length !== 0)\n            {\n                setAvailability({status:\"no\"});\n\n            }\n            else{\n                setAvailability({status:\"yes\"});\n            }\n        }\n        else{\n            setAvailability(\"\");\n        }\n    };\n\n    const {error,formField,handleOnChange,changeValue,handleSubmit} = useForm(submit,{\"gName\":\"\",\"name0\":\"\"},validateCreateGroup);\n    useEffect(()=>{\n        setShow(props.show);\n        if (systemGroups.length ===0)\n        {\n            RequestHandler(\"allGroups\",\"\",\"get\",props.jwt).then(result=>{\n                setSystemGroups(result);\n                })\n        }\n    },[props]);\n\n    return (\n        <Modal show={show} centered onHide={checkClosing?props.hide:()=>{}}  >\n            <form onSubmit={handleSubmit}>\n            <Modal.Header closeButton>\n                <Modal.Title className=\"txt-color \"> Create Group</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {successMessage.status ? <div className=\"text-success\">{successMessage.message}</div>:(<div className=\"alert-danger\">{error.message}</div>)}\n                <div className=\"md-form mb-4 row\">\n                    <label className=\"col-form-label col-sm-3 \" htmlFor=\"gName\">Group Name:</label>\n                    <div className=\"col-sm-8 \">\n                        <input type=\"text\" name=\"gName\" id=\"gName\" onChange={(event =>{handleOnChange(event); findAvailableGroup(event)})} value={formField.gName} className={`form-control ${error.gName && 'is-invalid'}`}\n                               placeholder=\"Group name should be unique...\"/>\n                        {error.gName &&(<div className=\"invalid-feedback\">{error.gName}</div>)}\n                        {isAvailable.status&&(isAvailable.status === \"yes\"?<p className=\"text-success small\">Group name is available.</p>:<p className=\"text-danger small\">Group name is not available.</p>)}\n                    </div>\n\n                </div>\n                <div className=\"md-form mb-7\">\n                    <div className=\"table-responsive\">\n                        <table className=\"table \" id=\"dynamic_field\">\n                            <tbody>\n                            <tr>\n                                <td><input type=\"text\" name=\"name0\" placeholder=\"Member's Phone Number\"\n                                           className={`form-control  ${error.name0 && 'is-invalid'}`} value={formField.name0} onChange={handleOnChange}/>\n                                    {error.name0 &&(<div className=\"invalid-feedback\">{error.name0}</div>)}\n                                </td>\n                                <td>\n                                    <button type=\"button\"  className=\"btn btn-success d-block\" onClick={handleAddField}> <Icon icon={plus}></Icon>\n                                    </button>\n                                </td>\n                            </tr>\n                            {\n                                addedFields.map((phoneField,index)=>{\n                                    return(\n                                        <tr key={index}>\n                                            <td><input type=\"text\" required={true} value={phoneField} onChange={(event)=>{handleChange(event,index)}} placeholder=\"Member's Phone Number\"\n                                                       className=\"form-control name_list\"/></td>\n                                            <td>\n                                                <button type=\"button\"  className=\"btn btn-danger d-block\" onClick={()=>removeField(index)}> <Icon icon={minus}></Icon>\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-secondary\" type=\"button\" onClick={checkClosing?props.hide:null}>\n                    Close\n                </button>\n                <button className=\"btn btn-success\" disabled={isAvailable.status===\"no\"&& true} type=\"submit\" >\n                    Save\n                </button>\n            </Modal.Footer>\n            </form>\n        </Modal>\n    )\n}\nexport default ModalsForm;\n\n","import React, {useContext, useState,lazy,Suspense} from 'react';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport {loginContext, userDetailsContext, disputeContext, memberSettlementContext} from \"./service/Contexts\";\nimport { Icon } from 'react-icons-kit';\nimport {plusCircle,userPlus,trashO,group,comments,user} from 'react-icons-kit/fa/'\nimport {useWindowSize} from \"./service/useWindowSize\";\nimport LoaderScreen from \"./Model/LoaderScreen\";\n\n\n\nconst ModalsForm = lazy(()=>import('./Model/CreateGroupModel'));\nconst AddMemberToGroup = lazy(()=>import('./Model/AddMemberToGroup'));\nconst AlertModal =lazy(()=>import('./Model/AlertModal'));\nconst DeletingModal =lazy(()=>import('./Model/DeletingModal'));\nconst ProfileManagementModal = lazy(()=>import('./Model/ProfileManagementModal'));\nconst NavBar =(props)=>{\n    const cookiesData = useContext(loginContext);\n    const userContext = useContext(userDetailsContext);\n    const fetchDisputeContext = useContext(disputeContext);\n    const memberSettlement = useContext(memberSettlementContext);\n    const selectedUser = typeof userContext.userData.userDetails.fullName !=='undefined'?userContext.userData.userDetails:{fullName:\"np\"};\n    const [modalShow, setModalShow] = useState({modalsForm:false,addMemberModal:false,alertPopUp:false,deleteModal:false,deleteType:null,editProfile:false});\n    const windowSize = useWindowSize();\n\n    const handleSelectedGroup=(selectedGroup)=>{\n        sessionStorage.setItem(\"groupName\",selectedGroup.groupName);\n        sessionStorage.setItem(\"createdBy\",selectedGroup.createdBy);\n          // props.callBackFunction();\n         // props.mainProps.history.push(\"/\")\n        callBackFetchingInformation();\n    };\n\n    const callBackFetchingInformation =()=>{\n\n        memberSettlement.dispatch({type:\"ADD\",payload:cookiesData.stateData.jwt});\n        console.log(\"asd\",memberSettlement)\n    };\n    const handleLogout = ()=>{\n        cookiesData.dispatch({type:'Logout'})\n        props.mainProps.history.push(\"/SplitExpenses/\");\n    };\n\n    return(\n        <div>\n            <ReactBootstrap.Navbar fixed=\"top\"  collapseOnSelect expand=\"lg\" variant=\"light\">\n                <ReactBootstrap.Navbar.Brand href=\"#home\"><img className=\"logo-img\" src={require('../img/logo2.png')} width=\"75px\" height=\"75px\"></img>Split Expenses</ReactBootstrap.Navbar.Brand>\n                <ReactBootstrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <ReactBootstrap.Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <ReactBootstrap.Nav className=\"mr-auto\">\n\n                        {/* -------Left side of navBar---------- */}\n                        <ReactBootstrap.Nav.Link href=\"/home\">Home</ReactBootstrap.Nav.Link>\n\n                        <ReactBootstrap.NavDropdown title=\"Groups\" id=\"collasible-nav-dropdown\" >\n                            {\n                                userContext.userData.groupList.map((groups,index)=>{\n                                    return <ReactBootstrap.NavDropdown.Item  active={false} onClick={()=>{handleSelectedGroup(groups)}} key={index}>\n\n                                        <Icon icon={group} ></Icon> {groups.groupName}</ReactBootstrap.NavDropdown.Item>\n                                })\n                            }\n                        </ReactBootstrap.NavDropdown>\n\n                        <ReactBootstrap.NavDropdown title=\"Manage Group\" id=\"collasible-nav-dropdown\">\n                            <ReactBootstrap.NavDropdown.Item href=\"#\"  onClick={()=>{setModalShow({...modalShow,modalsForm:true})}}> <Icon icon={plusCircle}></Icon> Create Group</ReactBootstrap.NavDropdown.Item>\n                            <ReactBootstrap.NavDropdown.Item href=\"#\" onClick={()=>{setModalShow({...modalShow,deleteModal:true,deleteType:\"group\"})}}> <Icon icon={trashO}></Icon> Delete Group </ReactBootstrap.NavDropdown.Item>\n                            <ReactBootstrap.Dropdown.Divider />\n                            <ReactBootstrap.NavDropdown.Item href=\"#1\"   onClick={()=>{setModalShow({...modalShow,addMemberModal:true})}}> <Icon icon={userPlus}></Icon>  Add Member </ReactBootstrap.NavDropdown.Item>\n                            {parseInt(sessionStorage.getItem(\"createdBy\")) === selectedUser.id && <ReactBootstrap.NavDropdown.Item href=\"#2\" onClick={()=>{setModalShow({...modalShow,deleteModal:true,deleteType:\"Member\"})}} > <Icon icon={trashO}></Icon> Delete Member</ReactBootstrap.NavDropdown.Item>}\n                        </ReactBootstrap.NavDropdown>\n\n                        <ReactBootstrap.Nav.Link  href=\"/upload\" >Upload Bill</ReactBootstrap.Nav.Link>\n                    </ReactBootstrap.Nav>\n\n                    {/* -------Right side of navBar---------- */}\n                        <div className=\"dispute\" data-toggle=\"tooltip\" data-placement=\"bottom\"  title=\"Disputes\">\n                        <a href=\"#\" className={!props.isDisputeDisplay ? 'isDisabled':\"\"}  onClick={props.loadDispute} >\n                          { windowSize.width >768?<Icon icon={comments} size={30}/> :\"Disputes\"}\n                            {fetchDisputeContext.disputeData.disputeArray.length !==0 &&<sup><span className=\"badge badge-pill badge-danger\">{fetchDisputeContext.disputeData.disputeArray.length }</span></sup>}</a>\n                        </div>\n\n                        <ReactBootstrap.Nav>\n                            <ReactBootstrap.NavDropdown   title={windowSize.width >768?<Icon className=\"navIcon\" icon={user} size={30} style={{color:\"#28a745\"}}/>:selectedUser.fullName} id=\"collasible-nav-dropdown \" alignRight>\n                                <ReactBootstrap.NavDropdown.Item onClick={()=>setModalShow({...modalShow,editProfile:true})}>Edit Profile</ReactBootstrap.NavDropdown.Item>\n                                <ReactBootstrap.NavDropdown.Item href=\"#\" onClick={()=>setModalShow({...modalShow,alertPopUp:true})}>Log Out</ReactBootstrap.NavDropdown.Item>\n                            </ReactBootstrap.NavDropdown>\n                        </ReactBootstrap.Nav>\n                </ReactBootstrap.Navbar.Collapse>\n            </ReactBootstrap.Navbar>\n            {modalShow.modalsForm? <Suspense fallback={<LoaderScreen/>}><ModalsForm callBack={callBackFetchingInformation} jwt={cookiesData.stateData.jwt} show={modalShow.modalsForm} toBeClosed={true} userName={selectedUser.fullName} hide={()=>{setModalShow({...modalShow,modalsForm:false})}}/></Suspense>:null}\n            {modalShow.addMemberModal?<Suspense fallback={<LoaderScreen/>}><AddMemberToGroup callBack={callBackFetchingInformation} jwt={cookiesData.stateData.jwt} show={modalShow.addMemberModal} hide={()=>{setModalShow({...modalShow,addMemberModal:false})}} /></Suspense>:null}\n                {modalShow.alertPopUp &&<Suspense fallback={<LoaderScreen/>}><AlertModal show={modalShow.alertPopUp} hide={()=>{setModalShow({...modalShow,alertPopUp:false})}} callBack={handleLogout} message={\"Do you wanna logout?\"} /></Suspense>}\n                {modalShow.deleteModal &&<Suspense fallback={<LoaderScreen/>}> <DeletingModal show={modalShow.deleteModal} jwt={cookiesData.stateData.jwt} hide={()=>{setModalShow({...modalShow,deleteModal:false,deleteType:null})}} callBack={callBackFetchingInformation} groups={userContext.userData.groupList} user={userContext.userData.userDetails} selectedType={modalShow.deleteType}/></Suspense>}\n                {modalShow.editProfile &&<Suspense fallback={<LoaderScreen/>}> <ProfileManagementModal show={modalShow.editProfile} hide={()=>setModalShow({...modalShow,editProfile:false})} jwt={cookiesData.stateData.jwt}/></Suspense>}\n        </div>\n    );\n\n};\n\n export default NavBar;\n","module.exports = __webpack_public_path__ + \"static/media/happy.ab95f5ce.png\";","import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /* \n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nvar AccordionCollapse = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext);\n  return React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), React.createElement(\"div\", null, React.Children.only(children)));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  return React.createElement(AccordionContext.Provider, {\n    value: activeKey\n  }, React.createElement(SelectableContext.Provider, {\n    value: onSelect\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: classNames(className, bsPrefix)\n  }), children)));\n});\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import React from 'react';\nimport { Icon } from 'react-icons-kit';\nimport {smileO,edit,remove,bell,caretDown} from 'react-icons-kit/fa/'\nimport {LightTooltip} from \"./service/CustomTooltip\";\nimport {RedTooltip} from \"./service/CustomTooltip\";\nimport {RequestHandler} from \"./service/RequestHandler\";\nimport * as ReactBootstrap from \"react-bootstrap\";\nimport {useWindowSize} from \"./service/useWindowSize\";\n\nconst NewAddedBillList = (props)=>{\n\n    const windowSize = useWindowSize();\n\n    const highlightDisputedRow=(key)=>{\n        let checkStatus = props.dispute.disputeArray.reduce((acc,curr) =>{\n           if (curr.billingDetails.transId === key)\n           {\n               acc = true;\n           }\n          return acc;\n       },false);\n       return checkStatus;\n    };\n\n   const handleRemove = (bill)=>{\n      RequestHandler('/removeBill',bill.transId,'delete', props.jwt ).then(result=>{\n            if (result)\n            {\n                props.addBilling();\n            }\n      });\n\n   };\n\n    //Method for creating and handling tool tip\n    const toolTipConst =  (stringNames)=>{\n        let names = arraySplit(stringNames);\n        const showDetail = names.map((name,index)=> ( <span key={index}><LightTooltip interactive arrow title={name}><a className=\"cus-tooltip\">{name.substring(0,1)},</a></LightTooltip></span>));\n        return (showDetail)};\n\n    //method for splitting spring into array\n    const arraySplit=(e)=>{\n        let value = e.split(\",\");\n        return value;\n    };\n\n    //method for converting string to date\n    const convertDate=(givenDate)=>{\n        let tempDate = new Date(givenDate);\n        let tempCons = tempDate.getFullYear()+\"-\"+(tempDate.getMonth()+1)+\"-\"+tempDate.getDate();\n        return tempCons;\n    };\n\n    const mobileView =  props.props.map((bill,key) => {\n        let date = convertDate(bill.date);\n        return(\n            <div className=\"cus-container\" key={key}>\n                <div className={`row ${props.dispute.disputeArray.length !== 0 ?(highlightDisputedRow(bill.transId)?\"table-warning\":null):null}`}>\n                    <ReactBootstrap.Accordion.Toggle as={ReactBootstrap.Button} variant=\"link\"  eventKey={key} className=\"col-md-11 col-sm-11 col-10 col-lg-11 col-xs-11\">\n                        <div className=\"row\">\n                            <span className=\"col d-flex justify-content-start \"><span className=\"text-uppercase\" > {bill.description} </span>  &nbsp;&nbsp; <span className=\"small\"> {date} </span></span>\n                            <span className=\"col-1 d-flex justify-content-end\"><Icon size={20} icon={caretDown}/></span>\n                        </div>\n                    </ReactBootstrap.Accordion.Toggle>\n                    {props.user.id === bill.enteredId?\n                        <div >\n                            <LightTooltip  arrow title=\"Edit Bill\"><a onClick={()=>{ props.callBackEdit(bill)}}  style={{color:\"#1E7E34\"}}><Icon size={15} icon={edit}></Icon></a></LightTooltip> |\n                            <RedTooltip  arrow title=\"Remove Bill\"><a onClick={()=>{handleRemove(bill)}}  style={{color:\"red\"}}><Icon size={15} icon={remove}></Icon></a></RedTooltip></div>\n                        :<RedTooltip  arrow title=\"Raise Conflict\"><a onClick={()=>{props.handleDispute(bill)}}  style={{color:\"red\"}}><Icon size={15} icon={bell}></Icon></a></RedTooltip>\n                    }\n                </div>\n                <ReactBootstrap.Accordion.Collapse eventKey={key}>\n                       <table className=\"table table-sm table-striped\" style={{fontSize:\"12px\"}}>\n                           <tbody>\n                           <tr>\n                               <td>Id</td>\n                               <td> {bill.transId}</td>\n                           </tr>\n                           <tr>\n                               <td>Description</td>\n                               <td>{bill.description}</td>\n                           </tr>\n                           <tr>\n                               <td>Date</td>\n                               <td> {date} </td>\n                           </tr>\n                           <tr>\n                               <td>Paid Amount</td>\n                               <td>{bill.amount}</td>\n                           </tr>\n                           <tr>\n                               <td>Paid By</td>\n                               <td>{bill.paidBy}</td>\n                           </tr>\n                           <tr >\n                               <td>Split on</td>\n                               <td>{bill.splitedOn.split(\",\").map(name=>name + \", \")}</td>\n                           </tr>\n                           </tbody>\n                       </table>\n                </ReactBootstrap.Accordion.Collapse >\n\n            </div> )\n\n    });\n\n    const deskTopView= ()=>{\n      return(<div>\n          <table className=\"cus-table table table-hover table-responsive-lg\" >\n              <thead>\n              <tr>\n                  <th>No.</th>\n                  <th>Description</th>\n                  <th>Date</th>\n                  <th>Paid Amount</th>\n                  <th>Paid By</th>\n                  <th>Split On</th>\n                  <th></th>\n              </tr>\n              </thead>\n              <tbody>\n              {props.props.map((bill)=>{\n                  return(<tr className={`collapsible ${props.dispute.disputeArray.length !== 0 ?(highlightDisputedRow(bill.transId)?\"table-warning\":null):null}`} key={bill.transId}>\n                      <td className=\"td-bills content\">{bill.transId}</td>\n                      <td className=\"td-bills content\">{bill.description}</td>\n                      <td className=\"td-bills content\">{convertDate(bill.date)}</td>\n                      <td className=\"td-bills content\">${bill.amount}</td>\n                      <td className=\"td-bills content\">{bill.paidBy}</td>\n                      <td className=\"td-bills content\">{toolTipConst(bill.splitedOn)}</td>\n                      <td className=\"content\">\n                          {props.user.id === bill.enteredId?\n                              <div>\n                                  <LightTooltip  arrow title=\"Edit Bill\"><a onClick={()=>{ props.callBackEdit(bill)}}  style={{color:\"#1E7E34\"}}><Icon size={20} icon={edit}></Icon></a></LightTooltip>|\n                                  <RedTooltip  arrow title=\"Remove Bill\"><a onClick={()=>{handleRemove(bill)}}  style={{color:\"red\"}}><Icon size={20} icon={remove}></Icon></a></RedTooltip></div>\n                              :<RedTooltip  arrow title=\"Raise Conflict\"><a onClick={()=>{props.handleDispute(bill)}}  style={{color:\"red\"}}><Icon size={20} icon={bell}></Icon></a></RedTooltip>\n                          }\n                      </td>\n\n                  </tr>)\n              })}\n              </tbody>\n          </table>\n          {/*{isEditedClicked?<BillEntryForm selectedBill={bill} show={true} changeTricker=\"true\"  jwt={jwt} groupMembers={groupMembers} />:null}*/}\n      </div>);\n    };\n\n    if (props.props.length !== 0) {\n     if (windowSize.width <768)\n     {\n         return <ReactBootstrap.Accordion>{mobileView}</ReactBootstrap.Accordion>\n     }\n     else {\n         return deskTopView();\n     }\n\n    }\n    else\n    {\n        return(<div >\n            <div className=\"d-flex justify-content-center\" > <img className=\"cus-happy-img\" src={require('../img/happy.png')}/></div>\n            <h4>Yeay, No Settlements Due...</h4>\n        </div>)\n    }\n\n};\n\n\nexport default NewAddedBillList;\n","import React from 'react';\n\nconst Footer = ()=>{\n    return (\n    <div className=\"footer-copyright text-center py-3\">\n        <h5 style={{color:\"#1E7E34\"}}> @ Made By Bill Splitter Team</h5>\n    </div>);\n}\nexport default Footer;\n","import React, { useState,useContext} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Icon } from 'react-icons-kit';\nimport {group} from 'react-icons-kit/fa/'\nimport {memberSettlementContext} from \"../service/Contexts\";\n\nconst DisplayGroupModal =(props)=>{\n    const memberSettlement = useContext(memberSettlementContext);\n    let sessionResult =sessionStorage.getItem(\"isShown\") === null?true: false ;\n    const [show,setShow] = useState(sessionResult);\n    const handleSelected = (selectedGroup)=>{\n        sessionStorage.setItem(\"groupName\",selectedGroup.groupName);\n        sessionStorage.setItem(\"createdBy\",selectedGroup.createdBy);\n        sessionStorage.setItem(\"isShown\",false);\n        sessionResult = !((sessionStorage.getItem(\"isShown\"))===\"false\");\n        setShow(sessionResult);\n    };\n\n\n    return (\n        <Modal show={show} centered onHide={()=>{return true}}  onExiting={props.callBack} >\n            <Modal.Header className=\"justify-content-center\" >\n                <Modal.Title className=\"txt-color \">Select a Group</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"cus-modal-body\">\n                <ul > {\n                    props.props.map((groups,index)=>{\n                       return(\n                               <li key={index}> <a className=\"text-uppercase\" key={index} onClick={(event)=>{handleSelected(groups)}} href=\"#\" ><Icon icon={group}></Icon> {groups.groupName}</a></li>\n                        );\n                    })\n                }</ul>\n\n            </Modal.Body>\n        </Modal>\n    );\n}\nexport default DisplayGroupModal;\n","import React, {useEffect, useState} from 'react';\nimport { Icon } from 'react-icons-kit';\nimport {caretDown,caretUp,edit} from 'react-icons-kit/fa/'\nimport * as ReactBootstrap from 'react-bootstrap';\nimport {RequestHandler} from \"./service/RequestHandler\";\nimport AlertModal from \"./Model/AlertModal\";\nimport {LightTooltip} from \"./service/CustomTooltip\";\n\n\nconst SettlementListDisplay = (props)=>{\n\n    let settlementArray = Object.entries(props.settlementList);\n    const [selectedItem,setSelectedItem] = useState({date:\"\",settlementId:\"\"});\n    const [showAlert, setShowAlert]= useState({status:false,message:\"\"});\n    const [isActive,setActive]= useState({});\n    const keyObjects  =settlementArray.reduce((acc,curr,index)=>{\n        acc[\"key\"+index]=false;\n        return acc;\n    },{});\n\n    const handleEdit=(date,settlementId)=>{\n      if (props.billingList.length === 0)\n      {\n          setSelectedItem({date:date,settlementId:settlementId});\n          setShowAlert({status:true,message: \" Are you sure ? You wanna edit the settlement? \"});\n      }\n      else {\n          setShowAlert({status:true,message: \"Error!!..The invoices' settlement should be done before editing previous settlement \"})\n      }\n    };\n\n    const retrieveSettlement = ()=>{\n        let formData = {groupName:sessionStorage.getItem('groupName'),\n            startDate:selectedItem.date.substring(0,10),\n            endDate:selectedItem.date.substring(14,24),\n            settlementId:selectedItem.settlementId\n        };\n        RequestHandler(\"/retrieveBill\",formData,'put',props.jwt).then(\n            (result)=>{\n                    if (result)\n                    {\n                        props.callBack();\n                    }\n                })};\n\n    const handleSelectedAccordion = (key)=>{\n        console.log(\"Settlement\",isActive);\n        console.log(\"key\",key);\n        if (key!== null) {\n            key=\"key\"+key;\n            setActive({[key]:!isActive[key]})\n        }\n        else {\n            setActive(keyObjects);\n        }\n    };\n\n\n    useEffect(()=>{\n        setActive(keyObjects);\n\n    },[props.settlementList]);\n\n\n    if (settlementArray.length !== 0) {\n     const returnValue =  settlementArray.map((value,key) => {\n            let isEditable = value[1][0].settlementDoneBy === props.user.id;\n          return(\n              <div className=\"cus-container\" key={key}>\n                  <div className=\"row\">\n                  <ReactBootstrap.Accordion.Toggle as={ReactBootstrap.Button} variant=\"link\"  eventKey={key} className=\"col-md-11 col-sm-11 col-10 col-lg-11 col-xs-11\">\n                      <div className=\"row\">\n                          <span className=\"col d-flex justify-content-start \"><span className=\"hide-container\"> From </span> &nbsp;&nbsp; <span> {value[0]} </span>  &nbsp;&nbsp; <span className=\"hide-container\"> settlements </span></span>\n                          <span className=\"col-1 d-flex justify-content-end\">{isActive[\"key\"+key]?<Icon size={30} icon={caretUp}/>:<Icon size={30} icon={caretDown}/>}</span>\n                      </div>\n                  </ReactBootstrap.Accordion.Toggle>\n                      {isActive[\"key\"+key]&& isEditable &&<div className=\"col-md-1 col-sm-1 col-1\">\n                          <LightTooltip placement=\"top\" title=\"Edit Settlement\">\n                              <span className=\"text-danger\">\n                                  <Icon onClick={()=>handleEdit(value[0], value[1][0].id)} icon={edit}/>\n\n                              </span>\n                          </LightTooltip>\n                      </div>}\n                  </div>\n                  <ReactBootstrap.Accordion.Collapse eventKey={key}>\n                      <>\n                      <ul className=\"cus-list\" key={key} id=\"example-collapse-text\">\n                          {value[1].map((settle)=>{\n                              const list = settle.settlementPaymentDetails.map((person,index)=>{\n                                  return(<li key={index}>{person.paidBy} pays {person.paidTo} = {person.amount.toFixed(2)} </li>);\n                              });\n                              return list;\n                          })}\n                      </ul>\n                      </>\n                  </ReactBootstrap.Accordion.Collapse >\n\n              </div> )\n\n        });\n        return ( <ReactBootstrap.Accordion  onSelect={e=>{handleSelectedAccordion(e)}}>{returnValue}\n           {showAlert.status &&<AlertModal show={showAlert.status} message={showAlert.message} callBack={retrieveSettlement} hide={()=>setShowAlert({...showAlert,status:false})}/>}\n        </ReactBootstrap.Accordion> ) ;\n\n    }\n    else\n    {\n        return(<div className=\"settlementList\">\n            <p>\n                <span> <img className=\"cus-happy-img\" src={require('../img/happy.png')}/></span>\n                <span className=\"h4\"> No Settlements List...</span>\n           </p>\n        </div>)\n    }\n\n}\nexport default SettlementListDisplay;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\n\nexport function DisputeNotifcationModal (props){\n\n    return (\n        <Modal show={props.show} centered  onHide={props.hide}  >\n            <Modal.Header closeButton>\n                <Modal.Title className=\"txt-color \"> Dispute Notification </Modal.Title>\n            </Modal.Header>\n                <Modal.Body>\n                    <h4 className=\"text-danger\"> You have dispute on these bills</h4>\n                    <p>For the more detail click on upper right discussion icon</p>\n                    {props.dispute.disputeArray.length !== 0 && props.dispute.disputeArray.map((dispute,index) =>{\n                        return (<ul key={index}>\n                            <li className=\"cust-dispute-li\">Id : {dispute.billingDetails.transId}</li>\n                           <li >Description: {dispute.billingDetails.description}</li>\n                        </ul>)\n                    })}\n\n                </Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-secondary\" onClick={props.hide}>\n                    Close\n                </button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\nexport default DisputeNotifcationModal;\n\n","const convertDate=(givenDate)=>{\n    let tempDate = new Date(givenDate);\n    let tempCons = tempDate.getFullYear() + \"-\" + (\"0\" + (tempDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + tempDate.getDate()).slice(-2)\n    return tempCons;\n}\n\nexport const ReduceSettlementList = (settlements)=>{\n    const reduced = settlements.reduce((pre,cur)=>{\n        let key = convertDate(cur.startDate) + \" to \"+ convertDate(cur.endDate);\n            if (  !pre[key] ) {\n\n                 pre[key]= new Array(cur);\n                return pre\n            }\n            else\n            {\n                pre[key].push(cur);\n                return pre;\n\n            }\n\n    },{});\n    return reduced;\n};\n","import React, {useContext, useEffect, useState,lazy,Suspense} from 'react'\nimport {\n    loginContext,\n    userDetailsContext,\n    memberSettlementContext,\n    disputeContext,\n} from \"./service/Contexts\";\nimport NavBar from \"./NavBar\"\nimport {RequestHandler} from \"./service/RequestHandler\";\nimport NewAddedBillList from './billingDetailList';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport { Icon } from 'react-icons-kit';\nimport {plus,calculator,search,gear,mailReplyAll} from 'react-icons-kit/fa/'\nimport Footer from \"./Footer\";\nimport DisplayGroupModal from \"./Model/DisplayGroupModal\";\nimport CreateGroupModel from \"./Model/CreateGroupModel\";\nimport SettlementListDisplay from \"./SettlementListDisplay\";\nimport {Link} from \"react-router-dom\";\nimport {LightTooltip} from \"./service/CustomTooltip\";\nimport DisputeNotifcationModal from \"./Model/DisputeNotifcationModal\";\nimport {ReduceSettlementList} from \"./service/ReduceSettlementList\";\nimport LoaderScreen from \"./Model/LoaderScreen\";\n\nconst BillEntryForm =lazy(()=>import('./Model/BillEntryModel'));\nconst FinalSettlement =lazy(()=>import('./Model/DisplaySettlementModal'));\nconst DisputeModal =lazy(()=>import('./Model/AddDisputeModal'));\nconst DisputePage = lazy(()=>import('./Dispute'));\n\nfunction LoginLanding(props) {\n    let todayDate = new Date();\n\n    const cookiesData = useContext(loginContext);\n    const userContext = useContext(userDetailsContext);\n    const memberSettlement = useContext(memberSettlementContext);\n    const fetchDisputeContext = useContext(disputeContext);\n\n    const [isLoading,setLoading] = useState({mainBody:true,disputePage:false});\n    const  [groupName,setGroupName]=useState(\"\");\n    const [user,setUser]=useState(\"\");\n    const [billingList,setBillingList] = useState([]);\n    const [settlementList,setSettlementList] = useState({});\n    const [groupList,setGroupList] = useState([]);\n    const jwt=cookiesData.stateData.jwt;\n    const [displayModals,setDisplayModals]=useState({\"addingBillingModal\":false,\"creatingGroupModal\":true,\"disputeModal\":false});\n    const [groupMembers,setGroupMembers]= useState([]);\n    const [checkChanges,setChanges]= useState(false);\n    const [finalSettlement,setFinalSettlement]=useState({\"value\":null,isModalShown:false});\n    const [selectedEditedBill,setSelectedEditedBill] = useState(null);\n    const [searchedDate,setSearchedDate]= useState(\"\");\n    const [ filteredSettlements,setFilteredSettlements] = useState({});\n    const [dispute,setDispute] = useState({status:false});\n\n\n    const callBackAddBillingList = ()=>{\n        setChanges(!checkChanges);\n    };\n\n    const callBackFetchingInformation =()=>{\n\n        memberSettlement.dispatch({type:\"ADD\",payload:jwt});\n    };\n\n    const editBillList=(bill)=>{\n        setSelectedEditedBill(bill);\n        setDisplayModals({...displayModals,addingBillingModal:true});\n\n    };\n\n    const handleDispute=(bill)=>{\n        setSelectedEditedBill(bill);\n        setDisplayModals({...displayModals,disputeModal:true});\n    };\n\n    const handleSearchFilter = ()=>{\n\n        setFilteredSettlements(Object.entries(settlementList).reduce((acc,cur) => {\n\n            if (cur[0].includes( searchedDate))\n            {\n                acc[cur[0]] = cur[1];\n            }\n            return acc;\n        },{}))};\n\n    const handleSettlement = ()=>{\n        RequestHandler('/calculate',groupName + \"/\" + user.id ,'get',jwt).then(result=>{\n            if(typeof result.ok !== \"undefined\" &&  !result.ok)\n            {\n                setFinalSettlement({value:\"Error While performing settlement.Please try again!!\",isModalShown:true});\n            }\n            else {\n                setFinalSettlement({value:result,isModalShown:true});\n            }\n        });\n    };\n    const fetchBillInfo=(newGroupName)=>{\n        RequestHandler('/getBillList',newGroupName,'get',jwt).then(result=>{\n            setBillingList(result);\n        });\n    };\n\n\n    useEffect(()=>{\n        if (searchedDate !==\"\")\n        {\n            handleSearchFilter();\n        }\n        if(groupName !==\"\" && searchedDate ===\"\")\n        {\n            fetchBillInfo(groupName);\n        }\n    },[searchedDate,checkChanges]);\n\n\n    useEffect(()=>{\n\n        if ( typeof userContext.userData.userDetails.fullName !==\"undefined\" )\n        {\n           if (isLoading.mainBody)\n           {\n               setUser(userContext.userData.userDetails);\n               setGroupList(userContext.userData.groupList);\n               setLoading({...isLoading,mainBody:false});\n               console.log(\"userajsdh\",userContext.userData);\n           }\n            if(sessionStorage.getItem(\"groupName\") !== null && sessionStorage.getItem(\"IsMemberFetched\") === \"false\") {\n                memberSettlement.fetchData.then(e => {\n                    console.log(\"E\", e);\n                    fetchBillInfo(sessionStorage.getItem(\"groupName\"));\n                    setGroupMembers(e.groupMemberList);\n                    const reduceSettlement = ReduceSettlementList(e.settlementList);\n                    setSettlementList(reduceSettlement);\n                    setGroupName(sessionStorage.getItem(\"groupName\"));\n                    sessionStorage.setItem(\"IsMemberFetched\",\"true\");\n                });\n            }\n        }\n    },[userContext.userData,sessionStorage.getItem(\"groupName\"),memberSettlement]);\n\n\n    return(<div>\n        <header>\n            <NavBar\n                mainProps={props}\n                loadDispute={()=>setLoading({...isLoading,disputePage: true})}\n                isDisputeDisplay={true}\n                callBack = {callBackFetchingInformation}\n            />\n        </header>\n        {isLoading.mainBody ?\n            <LoaderScreen/> :\n            <div className=\"container-fluid cus-padding\" style={{overflow: \"auto\"}}>\n                <section className=\"row\">\n                    <div className=\" col hide-container\">\n                        <article>\n                            <span>\n                                <h4 className=\"cus-color\">Hey {user.fullName} !!</h4>\n                            </span>\n                            <span className=\"d-inline cus-color\">TODAY: {todayDate.toDateString()}</span>\n                        </article>\n                    </div>\n                    <div className=\"col  cus-color\">\n                        <LightTooltip placement=\"top\"  title=\"Your Group Name. Click to see the members\">\n                        <h4 className=\"row cus-memberName-dropDown justify-content-center\">\n                              <ReactBootstrap.NavDropdown\n                                  title={sessionStorage.getItem(\"groupName\")? sessionStorage.getItem(\"groupName\"):\"Group Name\"}\n                                  id=\"collasible-nav-dropdown dropdown-menu-align-right\">\n                                  {groupMembers.map((memberName,index)=>\n                                  {return <ReactBootstrap.NavDropdown.Item active={false}  key={index}>\n                                                {memberName.fullName}\n                                            </ReactBootstrap.NavDropdown.Item>})}\n                             </ReactBootstrap.NavDropdown>\n                        </h4>\n                        </LightTooltip>\n                    </div>\n                    <div className=\"col\">\n                        <button className=\"btn btn-success cus-btn\" onClick={() => {\n                            setDisplayModals({...displayModals, addingBillingModal: true});\n                            setSelectedEditedBill(null);\n                        }} style={{float: \"right\"}}><Icon icon={plus}></Icon> Add New Bills\n                        </button>\n\n\n                    </div>\n                </section>\n\n                <div className=\"row\">\n                    <div className=\"col-lg-6 col-md-6  \">\n                        <div className=\"card border-left-primary shadow  py-2 \">\n                            <div className=\"card-header \">\n                                <div className=\"row \">\n                                    <h4 className=\"col-md-8 col-lg-9 col-sm-9 col-7\"> Latest Invoices</h4>\n                                   <div className=\"col-md-4 col-lg-3 col-sm-3 col-5 justify-content-end d-flex\" >\n                                    <button className=\"btn btn-success cus-btn col-md-10 col-lg-10 col-sm-10 col-10\"\n                                            disabled={billingList.length === 0}\n                                            onClick={handleSettlement}>\n                                        <Icon icon={calculator}></Icon> Settle\n                                    </button>\n                                   </div>\n                                </div>\n                            </div>\n                            <div className={`card-body ${billingList.length ===0 &&'align-items-center d-flex justify-content-center'}`} style={{overflow: \"scroll\"}}>\n                                <NewAddedBillList\n                                    props={billingList}\n                                    user={user}\n                                    addBilling={callBackAddBillingList}\n                                    callBackEdit={editBillList}\n                                    jwt={jwt}\n                                    handleDispute={handleDispute}\n                                    dispute = {fetchDisputeContext.disputeData}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-6 col-md-6  \">\n                        <div className=\"card border-left-primary shadow py-2 cus-card \">\n                        {!isLoading.disputePage ?<> <div className=\"card-header \">\n                                <div className=\"row\" style={{marginBottom:\"-18px\"}}>\n                                    <h4 className=\"col-md-8 col-lg-8 col-sm-7\"> Previous Settlement</h4>\n                                    <form className=\"form-inline col-md-4 col-lg-4 col-sm-5 cus-search-bar \">\n                                        <LightTooltip placement=\"top\"  title=\"Please enter the date or date range \">\n                                        <div className=\"input-group mb-3\">\n                                            <input type=\"text\"\n                                                   className=\"form-control cus-border\"\n                                                   value={searchedDate}\n                                                   onChange={(event => {setSearchedDate(event.target.value);\n                                                   })} placeholder=\"Search...\"/>\n                                            <div className=\"input-group-append\">\n                                                <button type=\"button\" className=\"btn btn-success\" onClick={event =>  handleSearchFilter}><Icon icon={search}></Icon></button>\n                                            </div>\n\n                                        </div>\n                                        </LightTooltip>\n                                    </form>\n                                </div>\n\n                            </div>\n                            <div className=\"card-body\"  style={{overflow: \"scroll\"}}>\n                                <SettlementListDisplay\n                                    settlementList={Object.keys(filteredSettlements).length === 0 && searchedDate===\"\"?settlementList:filteredSettlements}\n                                    billingList={billingList}\n                                    user={user}\n                                    jwt={jwt}\n                                    callBack={callBackFetchingInformation}\n                                />\n                            </div>\n                                <div className=\"card-footer\">\n                                     <button\n                                         type=\"button\"\n                                         className=\"btn btn-success  cus-btn\"\n                                         style={{float: \"right\"}}>\n                                        <Icon icon={gear}></Icon> Manage Settlement\n                                    </button>\n\n                                </div>\n                            </>:\n                            <>\n                            <div className=\" card-body \">\n                                <Suspense fallback={<LoaderScreen/>}> <DisputePage dispute={fetchDisputeContext.disputeData} jwt={jwt}  /></Suspense>\n                            </div>\n                                <div className=\"card-footer\" >\n                                    <LightTooltip placement=\"bottom\" title=\"Back to previous settlement page\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-success  cus-btn\"\n                                            onClick={()=>{setLoading({...isLoading,disputePage:false})}}\n                                            style={{float: \"right\"}}>\n                                            <Icon icon={mailReplyAll}></Icon> Previous Settlement\n                                        </button>\n                                    </LightTooltip>\n                                </div>\n                            </>}\n\n                        </div>\n                    </div>\n                </div>\n            {groupList.length === 0  ?\n                <CreateGroupModel show={displayModals.creatingGroupModal} userName={user.fullName} jwt={jwt} toBeClosed={false} hide={()=>(setDisplayModals({...displayModals,creatingGroupModal: false}))}/> :\n                <DisplayGroupModal props={groupList} callBack={callBackFetchingInformation}/>\n            }\n\n            {displayModals.addingBillingModal&&<Suspense fallback={<LoaderScreen/>}><BillEntryForm show={displayModals.addingBillingModal} selectedBill={selectedEditedBill} user={user} addBilling={callBackAddBillingList} jwt={jwt} groupMembers={groupMembers.map(member=>member.fullName)} hide = {()=>{setDisplayModals({...displayModals,addingBillingModal: false})}} /></Suspense>}\n            {finalSettlement.isModalShown&&<Suspense fallback={<LoaderScreen/>}><FinalSettlement\n                    show={finalSettlement.isModalShown}\n                    jwt={jwt} billingDetails={billingList}\n                    data={finalSettlement.value.calData}\n                    totalSpending={finalSettlement.value.totalSpending}\n                    members={groupMembers}\n                    hide = {()=>{setFinalSettlement({...finalSettlement,isModalShown:false});callBackFetchingInformation(); }}\n            /></Suspense>}\n            {displayModals.disputeModal&&<Suspense fallback={<LoaderScreen/>}><DisputeModal show={displayModals.disputeModal} userID={user.fullName} bill={selectedEditedBill} jwt={jwt} hide = {()=>{setDisplayModals({...displayModals,disputeModal:false})}} /></Suspense>}\n            {dispute.status&&<DisputeNotifcationModal dispute={fetchDisputeContext.disputeData} show={dispute.status} hide = {()=>{setDispute({...dispute,status:false})}} />}\n                <Footer />\n            </div>\n            }\n    </div>);\n}\nexport default LoginLanding;\n\n\n"],"sourceRoot":""}