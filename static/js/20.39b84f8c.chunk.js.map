{"version":3,"sources":["Pages/Model/ProfileManagementModal.js"],"names":["ProfileManagementModal","props","userContext","useContext","userDetailsContext","selectedUser","userData","userDetails","useState","message","setMessage","windowSize","useWindowSize","console","log","useForm","value","formField","sendingData","oldUsername","userName","RequestHandler","jwt","then","result","ok","success","status","error","statusText","phoneNumber","length","test","password","confirmPassword","oldPassword","handleSubmit","changeFormField","handleOnChange","show","onHide","hide","size","centered","Header","closeButton","Title","className","Body","type","name","placeholder","onChange","width","readOnly","event","Footer","onClick"],"mappings":"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","file":"static/js/20.39b84f8c.chunk.js","sourcesContent":["import React, {useContext,useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {userDetailsContext} from \"../service/Contexts\";\nimport {useWindowSize} from \"../service/useWindowSize\";\nimport {useForm} from \"../service/useForm\";\nimport {RequestHandler} from \"../service/RequestHandler\";\n\n\nexport function ProfileManagementModal (props){\n    const userContext = useContext(userDetailsContext);\n    const selectedUser = typeof userContext.userData.userDetails !=='undefined'&&userContext.userData.userDetails;\n    const [message,setMessage]=useState({});\n    const windowSize = useWindowSize();\n    console.log(\"user\",selectedUser);\n    let formData = {\n        \"phoneNumber\":\"\",\n        \"userName\":\"\",\n        \"password\":\"\",\n        \"confirmPassword\":\"\",\n        \"oldPassword\":\"\"\n    };\n\n    const validateFormData =()=>{\n        let error={};\n\n         if (formField.phoneNumber.length>15)\n         {\n            error.phoneNumber = \"Please Enter valid phone number\";\n         }\n        if (formField.userName !==\"\" && !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(formField.userName))\n        {\n            error.userName = \"Please use valid email address \"\n        }\n        if (formField.password !==\"\"&& formField.password.length <=6)\n        {\n\n            error.password = \"Please choose more than 6 characters password\"\n        }\n        if (formField.password !== formField.confirmPassword)\n        {\n            error.password=\"Password didn't match...\"\n        }\n        if (formField.oldPassword ===\"\")\n        {\n            error.oldPassword=\"Please enter the old password\"\n        }\n        return error;\n\n    };\n    const submit=(value) => {\n        delete formField['confirmPassword'];\n        const sendingData = {...formField, oldUsername: selectedUser.userName};\n        RequestHandler(\"/updateProfileDetails\", sendingData, 'post', props.jwt).then(result => {\n            if(typeof result.ok !=\"undefined\" &&!result.ok)\n            {\n                if (result.status === 404) {\n                    setMessage({error: \"Error Password is incorrect!!\"});\n                } else {\n                    setMessage({error: \"Error \"+result.statusText});\n                }\n            }\n            else {\n                setMessage({success: \"Successfully Updated..\"});\n            }\n        });\n    };\n\n    const {formField,error,changeFormField,handleSubmit,handleOnChange} = useForm(submit, formData,validateFormData);\n    return (\n        <Modal show={props.show}  onHide={props.hide} size=\"lg\" centered >\n            <Modal.Header closeButton>\n                <Modal.Title className=\"txt-color \"> Edit Profile </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form className=\"form-group container\">\n                    {message.success&&<p className=\"text-success\">{message.success}</p>}\n                    {message.error&&<p className=\"text-danger\">{message.error}</p>}\n                    <label className=\"col-form-label-lg\">Phone Number:</label>\n                    <div className=\"row  justify-content-center\">\n                        <input type=\"text\" className={`form-control col-md-5  ${error.phoneNumber && 'is-invalid'}`} name=\"phoneNumber\" placeholder=\"New Phone Number\" value={formField.phoneNumber} onChange={handleOnChange}/>\n                        <input type=\"text\" className={`${windowSize.width >768&& 'txtField-editingPage'} form-control col-md-5 `}   readOnly value={selectedUser.phoneNumber}/>\n                    </div>\n                    {error.phoneNumber &&(<div className=\"error-container d-flex justify-content-center\">{error.phoneNumber}</div>)}\n\n                    <label className=\"col-form-label-lg\">Email:</label>\n                    <div className=\"row  justify-content-center\">\n                        <input type=\"email\" className={`form-control col-md-5  ${error.userName && 'is-invalid'}`} name=\"userName\" placeholder=\"New Email\" value={formField.userName} onChange={ handleOnChange}/>\n                        <input type=\"text\" className={`${windowSize.width >768&& 'txtField-editingPage'} form-control col-md-5 `}   readOnly value={selectedUser.userName}/>\n                    </div>\n                    {error.userName &&(<div className=\"error-container d-flex justify-content-center\">{error.userName}</div>)}\n\n                    <label className=\"col-form-label-lg\">Password:</label>\n                    <div className=\"row  justify-content-center\">\n                        <input type=\"password\" className={`form-control col-md-5  ${error.password && 'is-invalid'}`} name=\"password\" placeholder=\"New Password\" value={formField.password} onChange={ handleOnChange}/>\n                        <input type=\"password\" className={`${windowSize.width >768&& 'txtField-editingPage'} form-control col-md-5  `} name=\"confirmPassword\" placeholder=\"Confirm Password\" value={formField.confirmPassword} onChange={(event => handleOnChange(event))}/>\n                    </div>\n                    {error.password &&(<div className=\"error-container d-flex justify-content-center\">{error.password}</div>)}\n\n                    <div className=\"d-flex justify-content-center\">\n                    <input type=\"password\" className={`form-control col-md-5  ${error.oldPassword && 'is-invalid'}`} placeholder=\"Old Password\" name=\"oldPassword\" value={formField.oldPassword} onChange={handleOnChange}/>\n                    </div>\n                    {error.oldPassword &&<div className=\"error-container d-flex justify-content-center\">{error.oldPassword}</div>}\n                </form>\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-success\" onClick={handleSubmit}>\n                    Update\n                </button>\n                <button className=\"btn btn-secondary\" onClick={props.hide}>\n                    Close\n                </button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\nexport default ProfileManagementModal;\n\n"],"sourceRoot":""}